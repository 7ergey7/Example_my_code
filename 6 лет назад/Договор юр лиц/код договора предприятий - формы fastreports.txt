//главная цель была сделать форму быстрой насколько возможно для такой тяжёлой формы                                                                                                                                                                                           
//здесь константы, чтобы было удобнее вносить изменения. Текстовые используются подписях к нопкам фильтров (воронка), цветовые - все используемые цвета оформления.
const c_noZ_obr='Нет заявлений с'+Chr(10)+'оборудованием на л/с';
      c_noZ_p1='Нет заявлений с ОТА'; c_noZ_p2='Нет заявлений с ШПД';      
      c_noZ_gsrc='Нет заявлений с подхо-'+Chr(10)+'дящими услугами и STB';      
      c_back_ZList='Вернуть полный'+Chr(10)+'список заявлений';
      c_color1=$77ccff; c_color2=$bbdebe; c_color3=$dddddd; c_color4=$77CC77; c_color5=$bbffbb;                                                                                                     
                                                                          //это р/с по каждому поставщику (в т.ч. и ниже t12_rs_neos), этот механизм был раньше, теперь берётся единый р/с для всех, но старый способ я пока оставил на всяк. случай, закоментировал.                                                                                                                                                                                                                                                                                                                                                                       
var codi_realiz,codi_arendi,codi_vozvrat,codi_vikup,codi_rassrochki_str,  //rs_mes,rs_mg,rs_uv,rs_neos,  
    номер_договора,дата_договора,населенный_пункт_договора,дата_приложений,оператор_в_лице,оператор_фио,абонент_фио,абонент_должность,абонент,абонент_основание,абонент_в_лице_на_основании,
    договор_день,договор_месяц,договор_год,фирменное_наименование,свидетельство_о_регистрации,
    ю_индекс,ю_область,ю_район,ю_населенный_пункт,ю_улица,ю_дом,ю_корпус,ю_квартира, п_индекс,п_область,п_район,п_населенный_пункт,п_улица,п_дом,п_корпус,п_квартира,
    банк,р_с,к_с,бик,инн,кпп, адс_индекс,адс_область,адс_район,адс_населенный_пункт,адс_улица,адс_дом,адс_корпус,адс_квартира,
    адрес_сайта_испа,логин_испа,пароль_испа, адс_по_месту_регистрации,адс_получение_в_офисе,адс_email,адс_личный_кабинет,интернет_почта,
    услуги_мс,услуги_внз,услуги_мг_мн,услуги_шпд,услуги_тв,
    метод_оплаты_услуг_кредит,метод_оплаты_услуг_аванс,метод_оплаты_услуг_аванс_пу, реклама_согласен,реклама_не_согласен,справка_09_согласен,справка_09_не_согласен,
    срок_действия_договора_не_определен,срок_действия_договора,дата_вступл_договора_в_силу,тех_поддержка,бюро_ремонта,контактный_телефон,мобильный,факс,емаил,
    филиал_цт_наимен,филиал_адрес,филиал_тел,филиал_инн,филиал_кпп,филиал_банк_наимен,филиал_банк_рс,филиал_банк_кс,филиал_банк_бик,филиал_наимен,
    реквизиты_оператора,реквизиты_абонента,номер_телефона,контактный_телефон_рег,дата_выполнения_работ,  
    тел,вид_оборудования_ота,схема_включения,зона_ответст_обсл_сооруж_связи,адрес_мпу,дата_начала,дата_конца,внз,мгмн,оператор_мгмн,тарифный_план_спус,тарифный_план_мг_мн,
     тел_предыдущ,технология_шпд,зона_ответст_опер,тарифный_план_шпд,ип_адрес,тех_нормы,вид_оборудования,наименование_оборудования,условия_предоставления,протокол_передачи,
     абонентский_интерфейс,шпд_логин,шпд_пароль,    
    txtO01,txtO1,txtO02,txtO2,txtO3,txtO4,npO1,npO2,                            
    сер_номер,модель,вид_обр,БУ,сумма_с_НДС,ежемес_с_НДС,сумма_без_НДС,сумма_НДС,итого_с_НДС,итого_без_НДС,итого_НДС,итого_ежемес,итого_колво, //для вывода оборудования в акты
    стоимость_с_НДС_руб,стоимость_с_НДС_коп,стоимость_с_НДС_прописью_руб,в_тч_НДС_руб,в_тч_НДС_коп,в_тч_НДС_прописью_руб,                
    t12_date,t12_dd,t12_month,t12_yyyy,{t12_rs_neos,}t12_rekvizits,t12_abon_okpo,t12_abonent_rekviz,t12_platelshik,t12np,t12_kolvo,t12_nds_percent,t12_numdoc                                                                                        
    : string;
    сумма_работ :Double; сумма_работ_на_сумму,сумма_работ_в_тч_НДС : String;
    наимен_раз_услуги,МПУ_услуги,номер_устройства,оборудование_тв,серийный_номер_тв_оборудования,тариф_план_тв,логин_пароль_tv : String;                              
    нп,номер_пп : integer;
      
    arAllZ,arAllSelZ,arZp1,arZp2,arForRassrochkiAndTorg12,arSobst,arSobstT12,arSobstR,arSobstUsl,arArenda,arArendaUsl,arVozvrat,arVikup,arGSRC,arSTBRC,arrpusvcMC,arr_inet_tp,arr_inet_ip : array of string; 
    AllZstr : string;
    txt_lFilterZ_obr,txt_lFilterZ_p1,txt_lFilterZ_p2,txt_lFilterZ_gsrc : string;                              
    iscreate_arAllZ,isfirst_obr,isfilter_obr,checklist,list_click, isfirst_p1,isfirst_p2,isfilter_p1,isfilter_p2, isfirst_gsrc,isfirst_aktvrab,isfilter_gsrc,
    isSobstR,isSobstNotR,isSobstT12,isSobstUsl,isArenda,isArendaUsl,isVozvrat,isVikup, selected_garantsogl,selected_regcard,selected_aktvrab : Boolean;
    selected_p1,selected_p2 : string;                                          
    qZ,qOL,qSAO,qPU,qUD,qR,qRGP : TfrxDataSet;
    k : Integer;                                                                
    s_ : String;                                  
    nKSTB : Integer; //номер позиции комплектации STB                                                                                                                                                                                                                                                        
    rtop : Double;   //используется при выводе графика рассрочки                                                                                                                                     
    List : TStringList; //только в функции recolorClb                                              
    iskluchenie : String; //это клиенты для которых в порядке исключения выводится доп информация (пока только в Торг-12).

    onlyone : integer;  //чтобы в процедуре обновления записи об оборудовании при редактировании (eChangeOnMouseDown) вызов окошка с заявлением для Торг не получалось дважды (это заплатка, из-за особенностей Fastreport - для выпадающего списка нет процедуры OnMouseDown) - в договоре нет необходимости в этой переменной, т.к. два раза процедура замены не срабатывает из за окошка рассрочки, а в госконтракте немонополисте есть. Здесь я на всякий случай её добавил

{******************************}    
{*** Загрузка главного окна ***}
{******************************}                                                          
procedure dpMainOnActivate(Sender: TfrxComponent);
begin
  //назначаются коды услуг, по ним потом выбирается оборудование в акты п/п и формируется график рассрочки (по кодам рассрочки)                                                                                                                                                                                                                                                                                                   
  codi_realiz:='''805600'',''805601'',''805602'',''805603'',''805604'',''805605'',''81145'',''81340'',''81379'',''81603'',''81604'',''81606'',''81608'',''81609'',''81610'',''81611'',''81613'',''81615'',''81616'',''81617'',''81618'',''81620'',''81621'',''81622'',''81625'',''81707'',''81708'',''81710'',''81711'',''81712'',''81713'',''82124''';
  codi_arendi:='''81312'',''81314'',''81315'',''81317'',''81318'',''81319'',''81321'',''81341'',''81350''';
  codi_vozvrat:='''81322'',''81342'',''81346'',''81392'',''81393'',''230832'',''550318'',''550419''';                                                                                                                                                                                                                                                               
  codi_vikup:='''81333'',''81332'',''81331'',''81339'',''81334'',''81335'',''81338'',''81337'',''81336''';                                                                                                                    
  codi_rassrochki_str:='''81611'',''81613'',''81615'',''81616'',''81621'',''81622'',''81707'',''81708'',''81710'',''81711'',''81712'',''81713'',''82124''';          

  //флаги:                  
  iscreate_arAllZ:=false; //создан/несоздан этот массив (следующая процедура)                                                                                                          
  //для действий, которые должны выполняться при первой загрузке какого-либо диалогового окна, а при последующих загрузках игнорироваться                                                                                             
  isfirst_obr:=true; isfirst_p1:=true; isfirst_p2:=true; isfirst_gsrc:=true; isfirst_aktvrab:=true;                                                                                          
  //состояние фильтрации списка заявлений (isfilter - значит "фильтрованый", false - значит "нет", приставка _p1 или obr, gsrc означает акт П1, окно с оборудованием, Гарантийное соглашение и Регистрационная карта - указывает на диалоговое окно)                                                                                                                             
  isfilter_obr:=false; isfilter_p1:=false; isfilter_p2:=false; isfilter_gsrc:=false;  //не фильтрованый
  //оригинальный текст для кнопки фильтра - нужен чтобы восстанавливать при изменении состояния фильтра                                                                                                                                                                                             
  txt_lFilterZ_obr:=lFilterZ_obr.Caption; txt_lFilterZ_p1:=lFilterZ_p1.Caption; txt_lFilterZ_p2:=lFilterZ_p2.Caption; txt_lFilterZ_gsrc:=lFilterZ_gsrc.Caption;

  {//отключил, т.к. выбор системы оплаты больше не используется - для всех один р/с
  SetFilter('Справочник (Поставщики)','vndr_id=1');
  rs_mes:=<Справочник (Поставщики)."РС (Иркутск)">+' по поставщику '+<Справочник (Поставщики)."Наименование">;
  SetFilter('Справочник (Поставщики)','vndr_id=2');  
  rs_mg:=<Справочник (Поставщики)."РС (Иркутск)">+' по поставщику '+<Справочник (Поставщики)."Наименование">;                                                                                                                                       
  SetFilter('Справочник (Поставщики)','vndr_id=33639993');  
  rs_uv:=<Справочник (Поставщики)."РС (Иркутск)">+' по поставщику '+<Справочник (Поставщики)."Наименование">;                                                                                                                                       
  SetFilter('Справочник (Поставщики)','vndr_id=6000000');  
  rs_neos:=<Справочник (Поставщики)."РС (Иркутск)">+' по поставщику '+<Справочник (Поставщики)."Наименование">;
  t12_rs_neos:=<Справочник (Поставщики)."РС (Иркутск)">;                                  
  SetFilter('Справочник (Поставщики)','');
  }
  //даты                
  deDDate.Date:=<Абонент."Дата договора">;
  deDDateVstVSilu.Date:=<Абонент."Дата договора">;
  dePril.Date:=<Абонент."Дата договора">;            
  deDSrokDog.Enabled:=False; deDSrokDog.Color:=clBtnFace;
  
//  pUpdateOrder;
//  cbVidiSvyaziOnClick(cbVidiSvyazi);
//  z_curr:='';
//  z_old:='';

  //данные абонента                                   
  AbonentFIO_rp.Text:=trim(trim(<ДопИнфо по абоненту."Фамилия">)+' '+trim(<ДопИнфо по абоненту."Имя">)+' '+trim(<ДопИнфо по абоненту."Отчество">));
  AbonentFIO.Text:=trim(<ДопИнфо по абоненту."ФИО руководителя">);
  AbonentDolzhnost.Lines.Text:=trim(<ДопИнфо по абоненту."В лице (должность)">);
  AbonentOsnovanie.Lines.Text:=trim(<ДопИнфо по абоненту."Основание">);

  k:=-1;                     //индекс добавленного оборудования в список clbOborud, для установки флажков п.у.
  checklist:=false;          //нажатие флажка в списке оборудования (от этого зависит поведение общего флажка и он принудительно снимается/ставится, и этот признак нужен, чтобы не срабатывала процедура общего флажка)                                                                                                                                                                                  
  list_click:=false;         //нажатие на списке оборудования (тогда копируется SN и т.д. в строку для редактирования, а т.к. состояние строки изменилось, срабатывает процедура редактирования строки и перезаписи её в списке, это правильно при редактировании, но не правильно при простом щелчке на списке. этот признак позволяет отличать одно от другого
  //цвета подкнопочных панелей                                                          
  pnlP1P2.Color:=c_color1;
  pnlObrVAkti.Color:=c_color1;
  pnlZPril.Color:=c_color1;
  //панель настроек для договора                                                               
  pnlDog.Color:=c_color2;

  //вывод текущих настроек диалоговых окон текстом на главную форму                                                                                                        
  pUpdateOperatorValues;
  pUpdateAbonentValues;
  pUpdateDopInfoValues;
end;

//массив отобранных заявлений для заполнения всех списков заявлений по умолчанию, кроме основного списка Z (справа внизу глав. окна). 
//Z содержит все заявления, нужен для установки курсора на конкретное заявление для выбора данных по нему.
procedure get_arZ();
var i : integer;                                              
begin
  if iscreate_arAllZ=false then begin   //если массив уже создан, второй раз выполнять процедуру ненадо, этот флаг устанавливается только один раз выше и здесь закрывается.                                                                                                                                                                                                                                                                                            
     SetFilter('Заявления абонента','DATE_CREATE_APPLIC>add_months(sysdate,-3)');    //берутся заявления за последние 3 месяца (более поздние не нужны).                                                                                                                                                                             
     qZ.First; i:=1;
     while not qZ.eof do begin   //здесь формируется массив всех этих заявлений...                                                                                                                                                                    
     //  if i>15 then break;     //это вариант для 15-ти первых заявлений - отключен                                                                                                                                               
       SetLength(arAllZ,i);                                                              
       arAllZ[i-1]:=<Заявления абонента."Номер заявления">;
       AllZstr:=AllZstr+','+<Заявления абонента."Номер заявления">;   //...и строка их номеров, чтобы ограничить основной список заявлений только этими, при выборе из них только
       i:=i+1;                                                             // заявлений с оборудованием. На самом деле в этом нет необходимости - просто альтернативный вариант (возможно                              
       qZ.Next;                                                            //он немного быстрее работает). в большенстве похожих случаев у меня используется массив а не строка номеров.      
     end;
     List:=TStringList.Create();  //контейнер, нужен для сохранения списка заявлений из какого-либо CheckListBox-а. Используется только в функции recolorClb (изменение фона CheckListBox-а),                                                                                                                                                                                                                                                                                                                                                                                                                                       
     delete(AllZstr,1,1);                  // т.к. при простом изменении цвета фона параметром Color, если список не пуст - перекрашивается не весь фон, а только где флажки. Чтобы менялся                                                                                                                                                                                                                                                                                                                                  
     iscreate_arAllZ:=true;                //весь нужно сделать пустой список - все заявления копируются в List - пустой нормально перекрашивается, затем все заявления возвращаются назад
     SetFilter('Заявления абонента','');   //Перекрашиваю, для лучшего визуального эффекта недоступности списка, для удобства пользователей.            
  end;                                     //List здесь, а не в загрузке глав. окна, т.к. он может ниразу не пригодиться, если нет выбора из заявлений.                                                                                                                                                                                                                                                                        
end;          

  
{*****************************************}
{*** Блок элементов управления Договор ***}
{*****************************************}                                                                                        
{*** щелчёк на флажке Договор ***} //отжатие флажка закрашивает все настройки договора серым, т.к. без него они не нужны.                                                                                                                                                                                                                                                         
procedure chbDogOnClick(Sender: TfrxComponent);
begin
  if chbDog.Checked then begin
     pnlDog.Color:=c_color2;
     chbDPreamb.Enabled:=true; lDPreamb.Enabled:=true; chbDEmpDate.Enabled:=true; lDDate.Enabled:=true; deDDate.Enabled:=true; deDDate.Color:=clWindow;
     chbDVstVSilu.Enabled:=true; lDVstVSilu.Enabled:=true; deDDateVstVSilu.Enabled:=true; deDDateVstVSilu.Color:=clWindow;
     lDIDeiystvuet.Enabled:=true; rbDBessrochno.Enabled:=true; lDBessrochno.Enabled:=true; rbDPo.Enabled:=true; lDPo.Enabled:=true; deDSrokDog.Enabled:=true; deDSrokDog.Color:=clWindow;
     chbDEmpDateOnClick(chbDEmpDate);     //процедуры нужно выполнить, т.к. при снятии флажка договора фон у всех дат закрашивается, чтобы он соответствовал настройкам.                                                                                                                                                                                                                                                                                                                                                                                                                          
     chbDVstVSiluOnClick(chbDVstVSilu);                                                                     
     rbDBessrochnoOnClick(rbDBessrochno);               
  end else begin 
     pnlDog.Color:=c_color3;
     chbDPreamb.Enabled:=false; lDPreamb.Enabled:=false; chbDEmpDate.Enabled:=false; lDDate.Enabled:=false; deDDate.Enabled:=false; deDDate.Color:=clBtnFace;                  
     chbDVstVSilu.Enabled:=false; lDVstVSilu.Enabled:=false; deDDateVstVSilu.Enabled:=false; deDDateVstVSilu.Color:=clBtnFace;
     lDIDeiystvuet.Enabled:=false; rbDBessrochno.Enabled:=false; lDBessrochno.Enabled:=false; rbDPo.Enabled:=false; lDPo.Enabled:=false; deDSrokDog.Enabled:=false; deDSrokDog.Color:=clBtnFace;
  end;
end;
{*** щелчёк на флажке Пустая дата ***}
procedure chbDEmpDateOnClick(Sender: TfrxComponent);
begin
  if chbDEmpDate.Checked then begin deDDate.Enabled:=False; deDDate.Color:=clBtnFace; chbDVstVSilu.Checked:=false; deDDateVstVSilu.Enabled:=False; deDDateVstVSilu.Color:=clBtnFace; end
                         else begin deDDate.Enabled:=True; deDDate.Color:=clWindow; deDDateVstVSilu.Enabled:=True; deDDateVstVSilu.Color:=clWindow; end;
end;
{*** Выбор даты договора ***}
procedure deDDateOnChange(Sender: TfrxComponent);
begin
  dePril.Date:=deDDate.Date; //дата приложений п.у. должна быть датой договора                                                                                                          
end;
{*** щелчёк на флажке Вступает в силу ***}
procedure chbDVstVSiluOnClick(Sender: TfrxComponent);
begin
  if chbDVstVSilu.Checked then begin deDDateVstVSilu.Enabled:=True;  deDDateVstVSilu.Color:=clWindow;  end 
                          else begin deDDateVstVSilu.Enabled:=False; deDDateVstVSilu.Color:=clBtnFace; end;
end;
{*** Выбор срока действия договора ***}
procedure rbDBessrochnoOnClick(Sender: TfrxComponent);
begin
  if rbDBessrochno.checked then begin deDSrokDog.Enabled:=False; deDSrokDog.Color:=clBtnFace; end else begin deDSrokDog.Enabled:=True; deDSrokDog.Color:=clWindow; end;                                                                                                         
end;
        
//процедура инициализация формы Оператора используется только в инициализации в самом низу, а Абонента - внизу и в одной процедуре окна абонента
{********************************************}
{*** Инициализации dpAbonent и dpOperator ***}
{********************************************}      
{*** Инициализация dpOperator ***}
procedure pInitOperatorValues;
begin
  cOperName.KeyValue:=<Оператор ПЭВМ."ИД оператора">;
  cOperLico.KeyValue:=<Договор от имени."Код">;     
  mOperLicoOsnova.Lines[0]:=<Договор от имени."Наименование">;      
end;
{*** Инициализация dpAbonent ***}
procedure pInitAbonentValues;
var str, str1 : string;                                                        
begin
  UrName.Lines.Clear;                  
  UrName.Lines.Text:=<Абонент."Юр. наименование">; //Фирменное наименование:  

  SvidReg.Lines.Clear;
  if (trim(<ДопИнфо по абоненту."Гос.Регистрация:Серия">)<>'') and (trim(<ДопИнфо по абоненту."Гос.Регистрация:Номер">)<>'') then 
     str:=<ДопИнфо по абоненту."Гос.Регистрация:Серия">+' - '+<ДопИнфо по абоненту."Гос.Регистрация:Номер">;
  if trim(<ДопИнфо по абоненту."Гос.Регистрация:Дата">)<>'' then str:=str+', '+<ДопИнфо по абоненту."Гос.Регистрация:Дата">;
  if trim(<ДопИнфо по абоненту."Гос.Регистрация:Выдано">)<>'' then  str:=str+', '+<ДопИнфо по абоненту."Гос.Регистрация:Выдано">;
  SvidReg.Lines.Text:=str;        
  
  //п.у. юридический адрес совпадает с почтовым, но если они разные, его можно заменить из поля mUradr.Lines.Text                                                                                                                                                                                                                                                                  
  mUradr.Lines.Text:=<Абонент."Юр. адрес">;
  uaIndex.Text:=<Регистрационные данные."Индекс">;
  str:=<Регистрационные данные."Область">; if trim(str)='ИРКУТСКАЯ ОБЛАСТЬ ОБЛ.'  then str:='ИРКУТСКАЯ ОБЛАСТЬ';
  str1:=<Регистрационные данные."Район">;  if trim(str1)='ИРКУТСКАЯ ОБЛАСТЬ ОБЛ.' then str1:='ИРКУТСКАЯ ОБЛАСТЬ';
  uaOblast.Text:=str;
  uaRayon.Text:=str1;
  uaPunkt.Text:=<Регистрационные данные."Нас.Пункт">;
  uaUliza.Text:=<Регистрационные данные."Улица">;
  uaDom.Text:=<Регистрационные данные."Дом">;
  uaKorpus.Text:=<Регистрационные данные."Корпус">;
  uaKvartira.Text:=<Регистрационные данные."Квартира">;                                         

  //почтовый адрес                                                                   
  paIndex.Text:=<Регистрационные данные."Индекс">;
  paOblast.Text:=str;
  paRayon.Text:=str1;
  paPunkt.Text:=<Регистрационные данные."Нас.Пункт">;
  paUliza.Text:=<Регистрационные данные."Улица">;
  paDom.Text:=<Регистрационные данные."Дом">;
  paKorpus.Text:=<Регистрационные данные."Корпус">;
  paKvartira.Text:=<Регистрационные данные."Квартира">;                                         

  //реквизиты банка                                     
  bank.Lines.Clear;                      
  bank.Lines.Text:=<Абонент."Банк">;
  rs.Text:=<Абонент."Р/С">;
  ks.Text:=<Абонент."К/C">;
  bik.Text:=<Абонент."БИК">;
  inn.Text:=<Абонент."ИНН">;
  kpp.Text:=<Абонент."КПП">;

  //контактные данные                                                                
  eadEmail.Text:=trim(<ДопИнфо по абоненту."СД:Email">); if eadEmail.Text='' then eadEmail.Text:=<ДопИнфо по абоненту."Email">; if eadEmail.Text<>'' then cbEmail.Checked:=true;
  if cbEmail.Checked then begin eadEmail.Enabled:=True; eadEmail.Color:=clWindow; end else begin eadEmail.Enabled:=False; eadEmail.Color:=clBtnFace; end;
  eKontaktPhone.Text:=<ДопИнфо по абоненту."Контактный телефон">;
  eMobile.Text:=<ДопИнфо по абоненту."SMS доставка">;
  eFaks.Text:=<ДопИнфо по абоненту."Факс">;
end;          
    
{********************************}
{*** Открытие диалоговых окон ***}
{********************************}
{*** оператор, абонент, доп инфо - кнопки с выводом установок на главную форму ***}                                                                                                                                                                       
//данные оператора                                                     
procedure bbOperatorOnClick(Sender: TfrxComponent);
begin
  dpOperator.ShowModal;
  if dpOperator.ModalResult=mrOk then pUpdateOperatorValues else pUpdateOperatorValues;
end;                    
//данные абонента                                                                   
procedure bbAbonentOnClick(Sender: TfrxComponent);
begin
  dpAbonent.ShowModal;
  if dpAbonent.ModalResult=mrOk then pUpdateAbonentValues else pUpdateAbonentValues;
end;
//данные доп. информация                                                                                  
procedure bbDopInfoOnClick(Sender: TfrxComponent);
begin
  dpDopInfo.ShowModal;
  if dpDopInfo.ModalResult=mrOk then pUpdateDopInfoValues else pUpdateDopInfoValues;    
end;
{*** открытие диалоговых окон с настройками для приложений ***}        
//информационные приложения                                                         
procedure bbInfPrilOnClick(Sender: TfrxComponent);
begin dpInfPril.ShowModal; end;
//для П1, П2                                              
procedure bbP1P2OnClick(Sender: TfrxComponent);
begin dpP1P2.ShowModal; end;
//для Актов п/п                                
procedure bbOborudVAktiOnClick(Sender: TfrxComponent);
begin dpOborudVAkti.ShowModal; end;
//для Акта вып раб, Гарант соглашения и Рег карты абонента                                                                                                                             
procedure bbZPrilOnClick(Sender: TfrxComponent);
begin dpZPril.ShowModal; end;
{*** Окна помощи ***}        
//для юридического адреса (в данных абонента)                                                                                                         
procedure bbHelp1OnClick(Sender: TfrxComponent);
begin dpHelp1.ShowModal; end;
procedure dpHelp1OnActivate(Sender: TfrxComponent);
begin
  dpHelp1.Color:=c_color4;
  h1l1.Color:=c_color4;            
end;
//для печати альбомных с портретными в П1, П2                                                                                                         
procedure bbHelp2OnClick(Sender: TfrxComponent);
begin dpHelp2.ShowModal; end;
procedure dpHelp2OnActivate(Sender: TfrxComponent);
begin
  dpHelp2.Color:=c_color4;
  h2l0.Color:=c_color4;            
  h2l1.Color:=c_color4;            
  h2l2.Color:=c_color4;            
  h2l3.Color:=c_color4;            
end;
//по выбору оборудования в Акты п/п                                                                                       
procedure bbHelp3OnClick(Sender: TfrxComponent);
begin dpHelp3.ShowModal; end;
procedure dpHelp3OnActivate(Sender: TfrxComponent);
begin
  dpHelp3.Color:=c_color4;
  h3l1.Color:=c_color4;            
  h3l2.Color:=c_color4;            
  h3l3.Color:=c_color4;            
  h3l4.Color:=c_color4;            
  h3l5.Color:=c_color4;            
  h3l6.Color:=c_color4;            
  h3l7.Color:=c_color4;            
  h3l8.Color:=c_color4;            
  h3l9.Color:=c_color4;            
  h3l10.Color:=c_color4;            
  h3l11.Color:=c_color4;            
  h3l12.Color:=c_color4;            
  h3l13.Color:=c_color4;            
  h3l14.Color:=c_color4;                                          
  h3l15.Color:=c_color4;            
  h3l16.Color:=c_color4;            
  h3l17.Color:=c_color4;            
  h3l18.Color:=c_color4;            
  h3l19.Color:=c_color4;            
  h3l20.Color:=c_color4;
  h3l21.Color:=c_color4;      
end;

{*** автозаполнение ФИО абонента в РП ***}                                     
procedure AbonentFIOOnExit(Sender: TfrxComponent);
begin
  AbonentFIO_rp.Text:=GetFioInPadeg(AbonentFIO.Text,'Р');                                          
end;

{***********************************************************************************************}
{*** Для обновления сведений об Абоненте, Операторе, Видах связи, Доп. инфо на главной форме ***}
{***********************************************************************************************}
{*** Об Операторе ***}                                     
procedure pUpdateOperatorValues;
begin
  lOperator.Caption:=<Пользователи АСР Старт."Наименование">+Chr(10)+'В лице '+mOperLicoOsnova.Lines.Text;
end;          
{*** Об Абоненте ***}  
procedure pUpdateAbonentValues;
var vStr: String;
begin
  vStr:=UrName.Lines.Text+'   Свидетельство о регистрации: '+SvidReg.Lines.Text;
  vStr:=vStr+Chr(10)+'Почтовый адрес - '+ paIndex.Text+', '+paOblast.Text+', '+paRayon.Text+', '+paPunkt.Text+', '+paUliza.Text+', '+paDom.Text+''+paKorpus.Text+', '+paKvartira.Text;
  vStr:=vStr+Chr(10)+'Юридический адрес - '+ uaIndex.Text+', '+uaOblast.Text+', '+uaRayon.Text+', '+uaPunkt.Text+', '+uaUliza.Text+', '+uaDom.Text+''+uaKorpus.Text+', '+uaKvartira.Text;
  if chbPoPochtAdres.checked then vStr:=vStr+Chr(10)+'Адрес и способ доставки счетов - '+'по почтовому адресу';    
  vStr:=vStr+Chr(10)+'Контактный телефон '+iif(trim(eKontaktPhone.Text)<>'',eKontaktPhone.Text,'-')+', мобильный '+iif(trim(eMobile.Text)<>'',eMobile.Text,'-')+', факс '+iif(trim(eFaks.Text)<>'',eFaks.Text,'-');       
  LAbonent.Caption:=vStr;
end;          
{*** О видах связи ***}         
{*** Доп. инфо ***}                               
procedure pUpdateDopInfoValues;
var vStr : string;                                         
begin
  case Metod.ItemIndex of  
    0: vStr:='КРЕДИТНЫЙ МЕТОД РАСЧЕТА, ';
    //1: vStr:='АВАНСОВЫЙ МЕТОД РАСЧЕТА, '; 
    1: vStr:='МЕТОД РАСЧЕТА АВАНСОВЫЙ В РАЗМЕРЕ ПОСТОЯННЫХ УСЛУГ, ';                                
  end;
  if rb09YES.Checked then vStr:=vStr+'С использованием сведений - СОГЛАСЕН, ' else vStr:=vStr+'С использованием сведений - НЕ СОГЛАСЕН, ';
  if rb09YES.Checked then vStr:=vStr+'С получением рекламы - СОГЛАСЕН' else vStr:=vStr+'С получением рекламы - НЕ СОГЛАСЕН';
  lDopInfo.Caption:=vStr;                 
end;          
  

{*** Выбор подписывающего договор в форме Оператора ***}        
procedure cOperLicoOnClick(Sender: TfrxComponent);
begin
  mOperLicoOsnova.Lines.Clear;
  mOperLicoOsnova.Lines[0]:=<Договор от имени."Наименование">;
end;

{*** Замена фона для CheckListBox-ов - фон перекрашивается не весь а только там где флажки - это некрасиво и запутывает, весь только когда список пуст, поэтому: ***}        
procedure recolorClb(obj : TfrxCheckListBoxControl; p_color : Integer);
var i : integer;                                   
begin
  if obj.Items.Count>0 then begin                                                                                                                                                                                                                                                                                          
     List.Clear();                                     
     i:=0; while i<obj.Items.Count do begin List.Add(obj.Items.Strings(i)); i:=i+1 end; //переносим все номера заявлений в список и очищаем CheckListBox,                                                                                                     
     obj.Items.Clear();                                                                 //очищаем его,                             
     obj.Color:=p_color;                                                                //красим фон,                                                                     
     i:=0; while i<List.Count do begin obj.Items.Add(List.Strings(i)); i:=i+1 end;      //переносим из List всё обратно в CheckListBox       
  end
  else obj.Color:=p_color;                                                              //а если списко и так пуст, то просто меняем фон, т.о. фон перекрашиваем.                                                                                                  
end;  


{******************************}
{*** Диалоговое окно П1, П2 ***}
{******************************}
{*** нажатие флажка П1 - доступен список ***}                                                                                            
procedure chbP1OnClick(Sender: TfrxComponent);
begin
  if chbP1.checked then begin
     cbP1.Color:=clWindow; cbP1.Enabled:=true;      
     if (cbP1.Text='по заявлению') then begin recolorClb(clbZP1,clWindow); clbZP1.Enabled:=true; bbFilterZ_p1.Enabled:=true; lFilterZ_p1.Enabled:=true; end;                      
  end else begin
     cbP1.Color:=clBtnFace; cbP1.Enabled:=false; recolorClb(clbZP1,clBtnFace); clbZP1.Enabled:=false; bbFilterZ_p1.Enabled:=false; lFilterZ_p1.Enabled:=false;                        
  end;            
end;
{*** выбор в списке, если "по заявлению", то заполняется и доступен список заявлений с фильтрацией, иначе всё это серое. ***}                                                                                                                                                                                                                                                                                            
procedure cbP1OnClick(Sender: TfrxComponent);
var i : Integer;                                   
begin
  if cbP1.Text='по заявлению' then begin                                                                   
     if isfirst_p1 then begin  //isfirst - чтобы каждый раз при выборе значения "по заявлению" не заполнялся список заявлений, чтобы заполнялся только один раз
        isfirst_p1:=false;                          
        get_arZ();               //так же и массив создаётся только один раз, если он ещё не создан, там внутри процедуры есть свой флажок, который это проверяет
        i:=0; while i<length(arAllZ) do begin clbZP1.Items.Add(arAllZ[i]); i:=i+1; end; 
     end;
     recolorClb(clbZP1,clWindow); clbZP1.Enabled:=true; bbFilterZ_p1.Enabled:=true; lFilterZ_p1.Enabled:=true;
  end
  else begin recolorClb(clbZP1,clBtnFace); clbZP1.Enabled:=false; bbFilterZ_p1.Enabled:=false; lFilterZ_p1.Enabled:=false; end;                                 
end;
{*** нажатие на фильтре ***}                                                  
procedure bbFilterZ_p1OnClick(Sender: TfrxComponent);
var str : string;                             
    i : integer;
begin
  clbZP1.Items.Clear();                                     
  if isfilter_p1=false then begin //если список ещё не фильтрован, на что указывает флаг                                                                                                                                            
     str:='';                                    
     i:=0;
     while i<length(arAllZ) do begin            //идёт поиск услуг для всех заявлений, чтобы оставить только заявления с этими услугами                                                                                                                                                                                             
       Z.KeyValue:=arAllZ[i];                     //заявление с которым работаем, оставляем только листы с услугами:                                                                                                                                                                                                                                                                                  
       SetFilter('Листы заявления','ID_CELL_SVC IN (-109,-10501,-105)');
       qOL.First;                                 //проверяем все эти листы, и если удовлетворяют условию if, то сохраняем номер заявления                                                                                                                                                                                                                                                                   
       while not qOL.eof do begin                                                                 
         if (Length(<Листы заявления."Номер устройства">)=10) and ((<Содержание листа."Пост.ИД слоя">=-11006) or (<Содержание листа."Пост.ИД слоя">=-11008)) then begin
            str:='заявления с ОТА на л/с есть';      
            clbZP1.Items.Add(<Заявления абонента."Номер заявления">);  //номер заявления получен                                                              
            break;                                                       //переходим к проверке следующего заявления                                                                                                     
         end;                 
         qOL.Next;                              
       end;                 
       SetFilter('Листы заявления','');                                                           
       i:=i+1;              
     end;                                           
     if str='' then begin bbFilterZ_p1.Enabled:=false; lFilterZ_p1.Caption:=c_noZ_p1; lFilterZ_p1.Color:=clYellow; end
               else begin bbFilterZ_p1.Glyph:=bb2.Glyph; lFilterZ_p1.Caption:=c_back_ZList; isfilter_p1:=true; end;                                         
  end
  else begin    //если список фильтрованый - восстанавливаем прежний список                                                                                                                            
     i:=0;                 
     while i<length(arAllZ) do begin  //просто из мессива                                                                                                               
       clbZP1.Items.Add(arAllZ[i]);
       i:=i+1;                       
     end;
     bbFilterZ_p1.Glyph:=bb1.Glyph; lFilterZ_p1.Caption:=txt_lFilterZ_p1;                            
     isfilter_p1:=false;                       
  end;            
end;
{*** нажатие флажка П2 - доступен список ***}   //здесь всё аналогично П1                                                                                                                                                 
procedure chbP2OnClick(Sender: TfrxComponent);
begin
  if chbP2.checked then begin
     cbP2.Color:=clWindow; cbP2.Enabled:=true;      
     if (cbP2.Text='по заявлению') then begin recolorClb(clbZP2,clWindow); clbZP2.Enabled:=true; bbFilterZ_p2.Enabled:=true; lFilterZ_p2.Enabled:=true; end;                      
  end else begin
     cbP2.Color:=clBtnFace; cbP2.Enabled:=false; recolorClb(clbZP2,clBtnFace); clbZP2.Enabled:=false; bbFilterZ_p2.Enabled:=false; lFilterZ_p2.Enabled:=false;                        
  end;            
end;
{*** выбор в списке, если "по заявлению", то заполняется и доступен список заявлений с фильтрацией, иначе всё это серое. ***}                                                                                                                                                                                                                                                                                            
procedure cbP2OnClick(Sender: TfrxComponent);
var i : Integer;  
begin
  if cbP2.Text='по заявлению' then begin                                                                   
     if isfirst_p2 then begin 
        isfirst_p2:=false; 
        get_arZ(); 
        i:=0; while i<length(arAllZ) do begin clbZP2.Items.Add(arAllZ[i]); i:=i+1; end; 
     end;
     recolorClb(clbZP2,clWindow); clbZP2.Enabled:=true; bbFilterZ_p2.Enabled:=true; lFilterZ_p2.Enabled:=true;
  end               
  else begin recolorClb(clbZP2,clBtnFace); clbZP2.Enabled:=false; bbFilterZ_p2.Enabled:=false; lFilterZ_p2.Enabled:=false; end;                                 
end;
{*** нажатие на фильтре ***}                                                  
procedure bbFilterZ_p2OnClick(Sender: TfrxComponent);
var str : string;                             
    i : integer;
begin
  clbZP2.Items.Clear();                                     
  if isfilter_p2=false then begin
     str:='';                                    
     i:=0;
     while i<length(arAllZ) do begin
       Z.KeyValue:=arAllZ[i];                                                           
       SetFilter('Листы заявления','ID_CELL_SVC IN (-101,-10101,-102,-10201) or SVC_ID=55552');
       qOL.First;                                                                                                                                                                                                                                                                                                   
       while not qOL.eof do begin               //всё аналогично П1, только нет условия if, если есть хотя бы один лист - берём это заявление                                                                                                                                                                                                                                                                                             
         str:='заявления с ШПД на л/с есть';      //казалось бы цикл не нужен, можно просто проверить, например, наличие номера заявления в наборе "листы заявления" -                                                                                                                                                                                                                                                                                       
         clbZP2.Items.Add(<Заявления абонента."Номер заявления">);            //- это бы значило, что запись существует, но так не работает.                                                                                   
         break;                                                                                                                                                          
         qOL.Next;                              
       end;                 
       SetFilter('Листы заявления','');                                                           
       i:=i+1;              
     end;                                           
     if str='' then begin bbFilterZ_p2.Enabled:=false; lFilterZ_p2.Caption:=c_noZ_p2; lFilterZ_p2.Color:=clYellow; end
               else begin bbFilterZ_p2.Glyph:=bb2.Glyph; lFilterZ_p2.Caption:=c_back_ZList; isfilter_p2:=true; end;                                         
  end
  else begin
     i:=0;                 
     while i<length(arAllZ) do begin                                                                
       clbZP2.Items.Add(arAllZ[i]);
       i:=i+1;                       
     end;
     bbFilterZ_p2.Glyph:=bb1.Glyph; lFilterZ_p2.Caption:=txt_lFilterZ_p2;                        
     isfilter_p2:=false;                       
  end;            
end;
{*** при закрытии окна для П1 и П2 меняется тект и подсветка кнопки ***}        
procedure dpP1P2OnHide(Sender: TfrxComponent);
var i : Integer;                                             
begin
  selected_p1:=''; selected_p2:=''; //Акт и заявление не выбраны (п.у.)- эти флаги используются для сохранения данных перед самим формированием договора по кнопке ОК - это проще и                                                                                                                                                                                                                                                                                        
  if chbP1.checked then               //понятнее, надёжней, чем проверять цвет кнопки или параметры окна, чтобы узнать были ли там сделаны настройки и нужно ли что-то делать для этих актов
     if (cbP1.Text='по л/с') then selected_p1:='по л/с' else           
     if (cbP1.Text='по заявлению') then begin
        i:=0;                          
        while i<clbZP1.Items.Count do begin                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
          if clbZP1.Checked(i) then begin selected_p1:='по заявлению'; break; end; //если по заявлению, то если выбрано хоть одно заявление - значит настройки сделаны.                                                                                                                                                                                                                                                         
          i:=i+1;                    
        end;
     end;               
  if chbP2.checked then
     if (cbP2.Text='по л/с') then selected_p2:='по л/с' else           
     if (cbP2.Text='по заявлению') then begin
        i:=0;
        while i<clbZP2.Items.Count do begin
          if clbZP2.Checked(i) then begin selected_p2:='по заявлению'; break; end;                                                             
          i:=i+1;                    
        end;
     end;               
  if (selected_p1<>'') or (selected_p2<>'') then begin bbP1P2.Caption:='     Акты П1, П2             (выбраны)'; pnlP1P2.Color:=c_color5; end 
                                            else begin bbP1P2.Caption:='     Акты П1, П2          (не выбраны)'; pnlP1P2.Color:=c_color1; end;
end;
  

{*********************************************************}
{*** Диалоговое окно выбора оборудования для Актов п/п ***}
{*********************************************************}
{*** Первая загрузка окна выбора оборудования для Актов п/п ***}       
procedure dpOborudVAktiOnActivate(Sender: TfrxComponent);
var i : Integer;                                     
begin
  if isfirst_obr then begin //инициализируется один раз                                                                                                  
     isfirst_obr:=false;
       
     //создание  массива (если ещё не создан) и заполнение им списка заявлений                                                                                  
     get_arZ();
     i:=0;                 
     while i<length(arAllZ) do begin                                                                  
       cbZ_obr.Items.Add(arAllZ[i]);
       i:=i+1;                       
     end;               

     Label24.Color:=$c5aaf3; Label30.Color:=$c5aaf3;  //подсказка к полю "Акт п/п" аренда[у],собств[у] - внизу                                                                                   
    
     //заполнение списка оборудования
     cbModel.Items.Add('===========< Общие виды оборудования');                                                      
     cbModel.Items.Add('ONT – модем');
     cbModel.Items.Add('ADSL – модем');
     cbModel.Items.Add('Приставка STB');
     cbModel.Items.Add('Коммутатор DIR');
     cbModel.Items.Add('');                                                      
     SetFilter('Справочник (Активное оборудование)','note like ''%SN=%;SY=%'' and (case r.class_id when 91911022 then 0 when 10035475567 then 1 when 10035477215 then 2 when 89731856 then 3 when 10035475572 then 4 when 10035475503 then 5 when 89731888 then 6 when 10035475502 then 7 when 10035475568 then 8 when 98715616 then 9 else 0 end)=0');                                                            
     cbModel.Items.Add('============================< Модемы');                                                      
     qSAO.First;
     while not qSAO.eof do begin
       cbModel.Items.Add(<Справочник (Активное оборудование)."Оборудование">);
       qSAO.Next;
     end;                           
     SetFilter('Справочник (Активное оборудование)','note like ''%SN=%;SY=%'' and (case r.class_id when 91911022 then 0 when 10035475567 then 1 when 10035477215 then 2 when 89731856 then 3 when 10035475572 then 4 when 10035475503 then 5 when 89731888 then 6 when 10035475502 then 7 when 10035475568 then 8 when 98715616 then 9 else 0 end)=2');                                                            
     cbModel.Items.Add('');                                                      
     cbModel.Items.Add('========================< ONT модемы');                                                      
     qSAO.First;
     while not qSAO.eof do begin
       cbModel.Items.Add(<Справочник (Активное оборудование)."Оборудование">);
       qSAO.Next;
     end;                           
     SetFilter('Справочник (Активное оборудование)','note like ''%SN=%;SY=%'' and (case r.class_id when 91911022 then 0 when 10035475567 then 1 when 10035477215 then 2 when 89731856 then 3 when 10035475572 then 4 when 10035475503 then 5 when 89731888 then 6 when 10035475502 then 7 when 10035475568 then 8 when 98715616 then 9 else 0 end)=6');                                                            
     cbModel.Items.Add('');                                                      
     cbModel.Items.Add('=======================< Коммутаторы');                                                      
     qSAO.First;
     while not qSAO.eof do begin
       cbModel.Items.Add(<Справочник (Активное оборудование)."Оборудование">);
       qSAO.Next;
     end;                           
     SetFilter('Справочник (Активное оборудование)','note like ''%SN=%;SY=%'' and (case r.class_id when 91911022 then 0 when 10035475567 then 1 when 10035477215 then 2 when 89731856 then 3 when 10035475572 then 4 when 10035475503 then 5 when 89731888 then 6 when 10035475502 then 7 when 10035475568 then 8 when 98715616 then 9 else 0 end)=3');                                                            
     cbModel.Items.Add('');                                                      
     cbModel.Items.Add('===============================< STB');                                                      
     qSAO.First;
     while not qSAO.eof do begin
       cbModel.Items.Add(<Справочник (Активное оборудование)."Оборудование">);
       qSAO.Next;
     end;                                
     SetFilter('Справочник (Активное оборудование)','note like ''%SN=%;SY=%'' and (case r.class_id when 91911022 then 0 when 10035475567 then 1 when 10035477215 then 2 when 89731856 then 3 when 10035475572 then 4 when 10035475503 then 5 when 89731888 then 6 when 10035475502 then 7 when 10035475568 then 8 when 98715616 then 9 else 0 end)=9');                                                            
     cbModel.Items.Add('');                                                      
     cbModel.Items.Add('======================< Видеосендеры');                                                      
     qSAO.First;
     while not qSAO.eof do begin
       cbModel.Items.Add(<Справочник (Активное оборудование)."Оборудование">);
       qSAO.Next;
     end;                              
     SetFilter('Справочник (Активное оборудование)','');
     qSAO.First;
     cbModel.Items.Add('');                                                                                                                             
     cbModel.Items.Add('=====================< Комплектующие');                                                      
     cbModel.Items.Add('Кабель 3хRCA');
     cbModel.Items.Add('Кабель HDMI');
     cbModel.Items.Add('Кабель Mini Jack - RCA');
     cbModel.Items.Add('Конвертор RCA-SCART');
     cbModel.Items.Add('Патч-корд Ethernet');
     cbModel.Items.Add('Пульт дистанционного управления');
  end;
  //инициализация флажков, названия означают: естьСобстВрассрочку, ..Неврассрочку, естьАренда, Выкуп, и т.д. - есть выбранные в поле "Акт п/п", чтобы знать какие акты печатать.                                                                                                                                                                                                                                                                                                                                                                                   
  isSobstR:=false; isSobstNotR:=false; isArenda:=false; isVikup:=false; isVozvrat:=false; isArendaUsl:=false; isSobstUsl:=false;                                                                                
end;
{*** фильтр по заявлениям с оборудованием ***}           
procedure bbFilterZ_obrOnClick(Sender: TfrxComponent);
var str, codraz : String;
    i : Integer;                                              
begin
  cbZ_obr.Items.Clear();                           
  if isfilter_obr=false then begin   //если ещё не фильтрованый                                              
     str:='';                                    
     SetFilter('Заявления абонента','NUM_APPLIC in ('+AllZstr+')'); //перебираются все заявления за последние 3 месяца                                                                                                                                                                                             
     qZ.First;            
     while not qZ.eof do begin                                        //здесь в основном наборе остаются только эти заявления                                                                                          
       qOL.First;       
       while not qOL.eof do begin                                     //перебераются листы текущего заявления в поисках оборудования                                                                                                                                        
         codraz:=<Листы заявления."Раз.услуга Код">;        
         if (pos('GEN',trim(<Содержание листа."Примечание">))>0) or (pos('АУ=',trim(<Содержание листа."Примечание">))>0) or (codraz='805600') or (codraz='805601') or (codraz='805602') or (codraz='805603') or (codraz='805604') or (codraz='805605') then begin 
            str:='заявления с оборудованием на л/с есть';      
            cbZ_obr.Items.Add(<Заявления абонента."Номер заявления">);
            break;                          
         end;
         qOL.Next;
       end;
       qZ.Next;
     end;
     SetFilter('Заявления абонента','');                                                         
     if str='' then begin bbFilterZ_obr.Enabled:=false; lFilterZ_obr.Caption:=c_noZ_obr; lFilterZ_obr.Color:=clYellow; end
               else begin bbFilterZ_obr.Glyph:=bb2.Glyph; lFilterZ_obr.Caption:=c_back_ZList; isfilter_obr:=true; end;                                         
  end
  else begin                         //если фильтрованый, то просто восстанавливается список из массива                                                                                                                                           
     i:=0;                 
     while i<length(arAllZ) do begin                                                                
       cbZ_obr.Items.Add(arAllZ[i]);
       i:=i+1;                       
     end;
     bbFilterZ_obr.Glyph:=bb1.Glyph; lFilterZ_obr.Caption:=txt_lFilterZ_obr;                        
     isfilter_obr:=false;                       
  end;            
end;
{*** Выбор оборудования из заявления ***}
//функции для извлечения из доп инфо серийного номера, марки модема и суммы для заполнения Актов ПП и вып работ                                                                                                                                                                                                                                                      
function get_sn(p_str: String):String;
begin Result:=trim(copy(p_str,pos('АУ=',p_str)+3,pos(';',copy(p_str,pos('АУ=',p_str)+3,length(p_str)-pos('АУ=',p_str)-2))-1)); end;
function get_modem(p_str: String):String;
begin Result:=trim(copy(p_str,pos('MODEM:',p_str)+6,pos(';',copy(p_str,pos('MODEM:',p_str)+6,length(p_str)-pos('MODEM:',p_str)-5))-1)); end;
function get_sum(p_str: String):String;
begin Result:=trim(copy(p_str,pos('SUM:',p_str)+4,pos(';',copy(p_str,pos('SUM:',p_str)+4,length(p_str)-pos('SUM:',p_str)-3))-1)); end;
//выборка данных об оборудовании, вывод на поля формы и в Акты ПП /ПП возврат                                                                                                                                                                                                       
procedure oborudovanieSHPD;
var str, ssvc{*}, gen, sum_arenda, obr, sn, model, akt, sum, svccod : String;
    i, j, l_sn, l_model, l_akt, l_sum, l_suma : Integer;                                                     
begin
  sn:=''; model:=''; akt:=''; sum:='';
  Z.KeyValue:='0'; Z.KeyValue:=cbZ_obr.Text;   //курсор устанавливается на выбранное заявление                                                                                                                                                                    
  SetFilter('Листы заявления','svc_code in ('+codi_vozvrat+','+codi_realiz+','+codi_arendi+','+codi_vikup+')'); //оставляем только листы с соответствующими услугами,                                                                                                                                                                                     
  lZDate.Caption:=<Заявления абонента."Дата создания заявления">;{*}                                                                                 
  lZPhone.Caption:=<Листы заявления."Номер устройства">;{*}                                                    
  qOL.First; ssvc:='';{*}                                    
  while not qOL.eof do begin                                                                                      //все они скорее всего содержат нужное оборудование, перебераем их  
     svccod:=<Листы заявления."Раз.услуга Код">;
     //комплектующие не прописываются в доп. информацию, но для них есть код
     //Массив для рассрочки заполняется пустыми значениями - нужно для совпадения размерности массива и списка оборудования, хотя комплектующие в рассрочку и не идут.
     //т.е. если есть комплектующие - они выбираются в список оборудования и могут идти в акты                                                                                                                                                                                                                              
     if svccod='805600' then begin clbOborud.Items.Add('                                   |Пульт дистанционного управления       | - | |в собств.|   300.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;                                                                                                                                                                                                                                                                        
     if svccod='805601' then begin clbOborud.Items.Add('                                   |Патч-корд Ethernet                    | - | |в собств.|    35.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;
     if svccod='805602' then begin clbOborud.Items.Add('                                   |Кабель HDMI                           | - | |в собств.|   100.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;
     if svccod='805603' then begin clbOborud.Items.Add('                                   |Кабель 3хRCA                          | - | |в собств.|    30.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;
     if svccod='805604' then begin clbOborud.Items.Add('                                   |Кабель Mini Jack - RCA                | - | |в собств.|    35.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;
     if svccod='805605' then begin clbOborud.Items.Add('                                   |Конвертор RCA-SCART                   | - | |в собств.|    30.00| '); k:=k+1; clbOborud.Checked(k):=true; setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:=''; {*R} end;
     ssvc:=ssvc+'; '+svccod+': '+<Листы заявления."Раз.услуга Наименование">;{*}                                                                
     str:=trim(<Содержание листа."Примечание">);        //берём всю строку доп. информации листа заявления (можно видеть в АРМ Заявлениях)                                                                                                                                                                                                                                                           
     if (pos('GEN',str)>0) then begin                     //если в ней есть оборудование (если строка в стандартном виде с GEN, как было до внедрения Технограда)                                                                                                                                                                         
        gen:=trim(copy(str,pos('GEN',str)+3,1));          //берём номер после GEN - это вид оборудования, он помечается соответствующей буквой                                                                                                                                                                                                                                                                                                                           
        if gen='0' then obr:='M' else   
        if gen='2' then obr:='O' else
        if gen='3' then obr:='S' else  
        if gen='6' then obr:='K' else 
        if gen='9' then obr:='B' else obr:=' ';
        obr:=' '+obr+' |';                                                                                                                                                                                                                                                                         
        sn:=get_sn(str); model:=get_modem(str); 
        if Pos(svccod,codi_arendi)>0 then begin           //для услуг аренды в зависимости от вида оборудования берётся сумма.                                                                                                                                                  
           akt:='в аренду'; 
           if gen='3' then sum_arenda:='85' else 
           if gen='2' then sum_arenda:='50' else sum_arenda:='50';
        end else begin                                    //для остальных услуг тоже выбирается акт и включаются доп. настройки.                                                                                                                                                               
           if Pos(svccod,codi_vikup)>0 then begin akt:='выкуп'; lVSumNote1.Enabled:=true; lVSumNote2.Enabled:=true; eVSum.Enabled:=true; eVSum.Color:=clWindow; end else 
           if Pos(svccod,codi_realiz)>0 then akt:='в собств.' else 
           if Pos(svccod,codi_vozvrat)>0 then begin akt:='возврат'; lVZNote.Enabled:=true; rbVZud.Enabled:=true; rbVZneud.Enabled:=true; end else
           if svccod='81377' then akt:='аренда[у]' else           
           if svccod='81380' then akt:='собств[у]' else akt:='';
           sum_arenda:='';               
        end;                                                                                                                        
        if svccod='81625' then sum:=<Содержание листа."Сумма">/100 else sum:=FormatFloat('#.##',StrToFloat(get_sum(str))*1.18); //для данного кода - сразу с НДС                                                                         
     end else         //если строка в нестандартном виде, после Технограда там прописывался только серийный номер, и какое-то время стандартный способ не работал, и брать приходилось так:                                                                                                                                                                                                                                                                                                                                                                                          
     if (pos('АУ=',str)>0) then begin                
        obr:=' ';
        obr:=' '+obr+' |';                                                                                                                                                                                                                                                                                 
        sn:=get_sn(str); model:=''; 
        if Pos(svccod,codi_arendi)>0 then begin  //типа оборудования не было, поэтому суммы аренды не было.                                                                                                                                    
           akt:='в аренду'; 
           sum_arenda:='';                                                                                  
        end else begin 
           if Pos(svccod,codi_vikup)>0 then begin akt:='выкуп'; lVSumNote1.Enabled:=true; lVSumNote2.Enabled:=true; eVSum.Enabled:=true; eVSum.Color:=clWindow; end else 
           if Pos(svccod,codi_realiz)>0 then akt:='в собств.' else 
           if Pos(svccod,codi_vozvrat)>0 then begin akt:='возврат'; lVZNote.Enabled:=true; rbVZud.Enabled:=true; rbVZneud.Enabled:=true; end else
           if svccod='81377' then akt:='аренда[у]' else           
           if svccod='81380' then akt:='собств[у]' else akt:='';
           sum_arenda:='';               
        end;
        if svccod='81625' then sum:=<Содержание листа."Сумма">/100 else sum:='';
     end;                 

     //далее берётся длины полей и в циклах добавляются недостающие пробелы до одинаковой длины всех колонок                                                             
     l_sn:=length(sn); l_model:=length(model); l_akt:=length(akt); l_sum:=length(sum); l_suma:=length(sum_arenda);
     i:=1; while i<=35-l_sn do begin sn:=sn+' '; i:=i+1; end; sn:=sn+'|';                                                                                                                                                                                                                                                                                                                            
     i:=1; while i<=38-l_model do begin model:=model+' '; i:=i+1; end; model:=model+'|';     
     i:=1; while i<=9-l_akt do begin akt:=akt+' '; i:=i+1; end; akt:=akt+'|';                                                                                               
     i:=1; while i<=9-l_sum do begin sum:=' '+sum; i:=i+1; end; sum:=sum+'|';                                                          
     i:=1; while i<=8-l_suma do begin sum_arenda:=' '+sum_arenda; i:=i+1; end;                                                                                            
     clbOborud.Items.Add(sn+model+obr+' |'+akt+sum+sum_arenda);                                              //получается строка разбитая на колонки, она добавляется в список                                                                                                                                           
     k:=k+1;                        
     clbOborud.Checked(k):=true;                                                                             //п.у. считается выбранной
     //если этот код раз. услуги ещё и в расрочку, то сохраняем заявление/лист в массив рассрочки, если другой код, то добавляется запись для торга-12, на всякий случай, т.к. не известно                                                                                                                                                                                                                                                                                                                                                                                    
     if Pos(svccod,codi_rassrochki_str) then begin        //пойдёт оборудование в торг-12 или нет, но его могут направить. Для рассрочки понадобится и номер листа, т.к. необходимо точное                                                                                                                                                                                                                                                                                                                                                                                                        
        setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:='(R)'+FloatToStr(<Листы заявления."Номер заявления">)+'/'+IntToStr(<Листы заявления."Номер листа">); //*R                                                                                                                   
     end else begin setLength(arForRassrochkiAndTorg12,k+1); arForRassrochkiAndTorg12[k]:='(Z)'+<Заявления абонента."Номер заявления">; end;   //соответствие заявления и листа для вывода
     //соответствующ. графика рассрочки. Для Торга-12 лист не нужен - N-а заявлений будут выводиться в заголовке. Z и R нужны, чтобы различать эти записи, т.к. массив у них общий.            
     qOL.Next; //если обордование добавляют вручную кнопкой +, то заявление/лист указывают во всплывающем окошке (если для него есть рассрочка). Т.е. так или иначе все заявления для                                                                                                                                                                                                                                                                                                                                                         
  end;         //вывода графика рассрочки или Торга-12 мы сохраняем в этот массив. В конце, в процедуре bOkOnMouseDown, перед самим формированием договора, когда список оборудования                                                                                                                                                                                                                                                                                                                                    
  qOL.First;   //уже меняться не будет, по нему создаются массивы для вывода каждого бланка, содержащие все необходимые данные для построения каждого бланка. При создании этих массивов
  if ssvc<>'' then delete(ssvc,1,2);{*}         //в них сохраняются и эти заявления. Эти масивы существенно повышают скорость работы формы
  lZSvc.Caption:=ssvc;{*} //* - это вывод данных заявления (Даты, Тел-а, Услуг) в инф. поля. Пометил *-кой, чтобы можно было быстро весь его найти.                                                                                                                                                                                                                                                                                                                                                                    
  SetFilter('Листы заявления','');               
end;
{*** выбор заявления ***}
procedure cbZ_obrOnClick(Sender: TfrxComponent);
begin
  OborudovanieSHPD; //при выборе заявления сразу выбирается оборудование в список                                                                                                                                                                            
end;
{*** добавление пустой строки оборудования по кнопке "+" ***}                                                                                                                                 
procedure dpROnActivate(Sender: TfrxComponent);
begin eR.SetFocus; end;
procedure bOborudPlusOnClick(Sender: TfrxComponent);
var ertxt : String;        //*R                                    
begin
   eR.Text:='';                          
   dpR.ShowModal;          //*R  выводится диал. окно для указания номера заявления/листа, на случай если оборудование будет в расрочку. если нет - поле в окне оставляют пустым                                                                                                                                                                                                                                                                                                                                                               
   ertxt:=trim(eR.Text);   //*R                                   
   clbOborud.Items.Add('                                   |                                      |   | |         |         | ');
   k:=k+1;                        
   clbOborud.Checked(k):=true;
   setLength(arForRassrochkiAndTorg12,k+1); if trim(ertxt)<>'' then arForRassrochkiAndTorg12[k]:='(R)'+ertxt else arForRassrochkiAndTorg12[k]:=''; //*R                                                                                                                   
end;
{*** Выбор/невыбор всего оборудования общим флажком ***}
//здесь просто пробегается весь спискок и ставятся/снимаются везде флажки                                                                                                                                                                                                           
procedure CheckBox1OnClick(Sender: TfrxComponent);
var i : Integer;                                     
begin
  if checklist=false then begin   //при снятии флажка в списке, общий флажок так же принудительно снимаем, но тогда срабатывает эта процедура, и это условие нужно чтобы она не срабатывала,                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
     i:=0;                                         //иначе снимает и остальные флажки (т.е. простая санипуляция с флажком из кода checked:=false/true запускает связанную, процедуру                                                                                                                                                                                                                                         
     while i<clbOborud.Items.Count do begin        //- особенность генератора), т.е. эта процедура должна срабатывать только при нажатии на общем флажке а не на списке
       clbOborud.Checked(i):=chbAlloborud.checked;           
       i:=i+1;                    
     end;
  end;                 
end;
{*** очистка резинкой ***}                                                           
procedure bbClearOnClick(Sender: TfrxComponent); //очищается строка редактирования, данные из заявления, массив рассрочки.                                                                                                                                                                 
begin
  clbOborud.Items.clear(); chbAlloborud.checked:=false; eSN.Text:=''; cbModel.Text:=''; eObr.Text:=''; cbAkt.Text:=''; eSum.Text:=''; eSuma.Text:=''; cbZ_obr.ItemIndex:=-1; k:=-1;                                                                                                                                                                                                                                        
  lZDate.Caption:=''; lZPhone.Caption:=''; lZSvc.Caption:=''; {*}
  setLength(arForRassrochkiAndTorg12,0); //*R                                                                                                                           
end;
{*** Нажатие на списке оборудования - 1) установка/снятие флажков, 2) выбор строки для редактирования ***}
procedure clbOborudOnClick(Sender: TfrxComponent);
var i, c, n : Integer;
    str, s : string;                                                
begin
  if clbOborud.ItemIndex<>-1 then begin   //если нажали на строку или флажок.
     //вначале проверяеться как стоят флажки (могло быть нажатие на флажке)                                                                                                                                                                                       
     i:=0; c:=0;               
     while i<clbOborud.Items.Count do begin
       if clbOborud.Checked(i)=false then begin c:=c+1; break; end;  //если есть невыбранный - отмечаем это.                                                                                                                                                     
       i:=i+1;                    
     end;            //вот здесь как раз checklist не даёт срабатывать процедуре общего флажка при принудительной его установке/снятии                                                                                                                                                                                                                                                     
     if c>0 then begin checklist:=true; chbAlloborud.checked:=false; checklist:=false; end else begin checklist:=true; chbAlloborud.checked:=true; checklist:=false; end;
            
     //строку с оборудованием из списка разбирает по разделителям "|" в соответствующие поля строки редактирования                                                                                                                                                                                                                                                             
     str:=clbOborud.Items.Strings(clbOborud.ItemIndex)+'|';
     s:=''; c:=0;
     while str<>'' do begin
       list_click:=true;  //кажется что это лишний оператор, но без него при выборе из выпадающего списка, например оборудования, в строке редактирования и затем при переходе на другую                                                                                                                                                                                                                                                                                                                                                                                                                   
       c:=c+1; n:=Pos('|',str); s:=trim(Copy(str,1,n-1));  //строку списка, оборудование из предыдущей строки копируется в ту, на которую перешли - это был бы серьёзный косяк.                                                                                                                                                                                                                                                                                                                   
       case c of 1: eSN.Text:=s; 2: cbModel.Text:=s; 3: eObr.Text:=s; 4: if s='X' then chbBu.checked:=true else chbBu.checked:=false; 5: cbAkt.Text:=s; 6: eSum.Text:=s; 7: eSuma.Text:=s; end;
       Delete(str,1,n);                       
     end;
     list_click:=true;  //при нажатии на флажке или строке строка будет выделенна - поэтому это нажатие на списке, и данные копируются в строку для редактирования под ним - это изменение
  end;                    // в строке, оно должно игнорироваться (а не копироваться в выбранную строку). поэтому в процедуре изменения строки есть такое условие, что <>true                     
end;
{*** Редактирование оборудования, позиции в строке редактирования ***}
//сразу после щелчка на списке нельзя менять например пустую строку, первое изменение (первый символ) в любом поле игнорируется, чтобы этого не было добавил эту процедуру.                                                                                                                                                                                                                                                                                                                                                                                                                                                              
procedure eChangeOnMouseDown(Sender: TfrxComponent; Button: TMouseButton; Shift: Integer; X, Y: Integer);
begin list_click:=false; end;
//а это сама процедура замены                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
procedure OborudOnChange(Sender: TfrxComponent);                                    
var sn, model, obr, bu, akt, sum, suma : String;
    i, l_sn, l_model, l_obr, l_akt, l_sum, l_suma : Integer;                                                     
begin
  if (clbOborud.ItemIndex>=0) and (list_click<>true) then begin    //если позиция отмечена и изменение не по щелчку на списке, а это именно изменение в строке редактирования                                                                                                                                    
     sn:=trim(eSN.Text); model:=trim(cbModel.Text); obr:=trim(eObr.Text); if chbBu.checked then bu:='X' else bu:=' '; akt:=cbAkt.Text;
     onlyone:=onlyone+1;    //у процедуры есть привычка выполняться два раза для ComboBox-ов. Для этого вводил эту переменную в госконтракте. Здесь второе выполнение перебивается окном                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
     if (sender.name='cbAkt') and (onlyone=1) then                                                                             //для Торг-12, но на всякий случай эту переменную оставил.                                                                                                                                                                                                                                 
        if akt='выкуп' then begin lVSumNote1.Enabled:=true; lVSumNote2.Enabled:=true; eVSum.Enabled:=true; eVSum.Color:=clWindow; end else
        if akt='возврат' then begin lVZNote.Enabled:=true; rbVZud.Enabled:=true; rbVZneud.Enabled:=true; end else
        if akt='торг 12' then begin
           i:=clbOborud.ItemIndex;    //Если нет N заявления для передаваемого в Торг-12 оборудования, выходит окошко, где можно его ввести, тогда он будет добавлен в массив.                                                                                                                                                                                                                                                                                                                                                                                                                                     
           if arForRassrochkiAndTorg12[i]='' then begin eT.Text:=''; dpTorg.ShowModal; arForRassrochkiAndTorg12[i]:='(Z)'+trim(eT.Text); end;
        end;
     if onlyone=2 then onlyone:=0;                                                                                       
     sum:=trim(eSum.Text); suma:=trim(eSuma.Text);  //в общем при изменении строки редактирования данные сохраняются и строка в списке заменяется, в этом смысл этой процедуры.                                                                                                                                                                                                                                                                                                  
     l_sn:=length(sn); l_model:=length(model); l_obr:=Length(obr); l_akt:=length(akt); l_sum:=length(sum); l_suma:=length(suma);                                                                                                                     
     i:=1; while i<=35-l_sn do begin sn:=sn+' '; i:=i+1; end; sn:=sn+'|';                                                                                                                         
     i:=1; while i<=38-l_model do begin model:=model+' '; i:=i+1; end; model:=model+'|';
     obr:=Uppercase(trim(obr));                                               
     if obr<>'' then begin
        case trim(obr) of     //если введены русские буквы                                                                          
          'М': obr:='M';                          
          'О': obr:='O';     
          'К': obr:='K';     
          'В': obr:='B'; 'V': obr:='B';
        end;
        if (obr<>'M') and (obr<>'O') and (obr<>'S') and (obr<>'K') and (obr<>'B') and (obr<>'-') then obr:=' ';                                                                                                                                                   
        obr:=' '+obr+' |';  
     end else obr:='   |';
     i:=1; while i<=9-l_akt do begin akt:=akt+' '; i:=i+1; end; akt:=akt+'|';                                                                                               
     i:=1; while i<=9-l_sum do begin sum:=' '+sum; i:=i+1; end; sum:=sum+'|';                                                          
     i:=1; while i<=8-l_suma do begin suma:=' '+suma; i:=i+1; end;                                                                                           
     clbOborud.Items[clbOborud.ItemIndex]:=sn+model+obr+bu+'|'+akt+sum+suma;                 //замена строки целиком
  end;
  list_click:=false; //установка в начальное значение (если не ошибаюсь, для других полей строки редактирования это лишнее, а для ComboBox-ов нет, т.к. процедура срабатывает 2-жды и 1-ый                                                                                                                                                                                                                                                                                                                                                                                       
end;                   //раз она не выполняется из-за значения параметра true, только во 2-ой - не уверен что всё в точности так, разобраться уже сложно, но я бы его не убирал, пока
{*** Проверка окна с оборудованием на ошибки перед закрытием ***}                                                       //..работает). Помню что пытался убрать эти повторные срабатывания.                                                                                                                                                                                                                                                                     
procedure bOborudOKOnMouseDown(Sender: TfrxComponent; Button: TMouseButton; Shift: Integer; X, Y: Integer);
var i, c1, c2, c3, answer, answer1 : integer;    
    str, s, msg : string;
    err1, err2 : Boolean;                                      
begin
  dpOborudVAkti.ModalResult:=mrOk;                 //п.у. ошибок нет                        
  msg:='';                    
  answer:=0;                                       //ответ диалогового окна                                                      
  str:='';                                         //строка из списка                                                              
  i:=0; c1:=0; c2:=0; c3:=0; err1:=false; err2:=false; //признаки ошибок                                                                                                                                                                             
  while i<clbOborud.Items.Count do begin           //перебор всех строк и анализируем только выбранные, остальные никуда не попадут
    if clbOborud.Checked(i) then begin 
       str:=clbOborud.Items[i]; Delete(str,1,Pos('|',str)); Delete(str,1,Pos('|',str)); if trim(Copy(str,1,Pos('|',str)-1))='' then c1:=c1+1; //значит есть пустой вид оборудования -                                                                                                                                                                                                                                                                
                                Delete(str,1,Pos('|',str)+2); if trim(Copy(str,1,Pos('|',str)-1))='' then c2:=c2+1; //не заполнен Акт           //ошибка, но не строгая, т.е. возможно не     
                                                       //+2 - это поле БУ                                             //он должен быть.         //заполнять, но желательно заполнить всё же.
       s:=trim(Copy(str,1,Pos('|',str)-1));  //акт:                                                       
       if (s='выкуп') and ((trim(eVSum.Text)='') or (StrToFloat(trim(eVSum.Text))=0)) then c3:=c3+1 else  //если не заполнена выкупная стоимость                                                                                         
       if (s='в аренду') then begin 
          s:=str; Delete(s,1,Pos('|',s)); Delete(s,1,Pos('|',s));  //в s пишем оставшуюся часть строки, оставляем только сумму аренды                                                                                                                                                                                                                                           
          if trim(s)='' then err2:=true                              //если она пустая - ошибка. иначе, если в сумме запятая вместо точки - исправляется на точку.                                                                                                                                                                                                                                                                            
                        else if pos(',',s)>0 then eSuma.Text:=trim(Copy(s,1,Pos(',',s)-1)+'.'+trim(Copy(s,Pos(',',s)+1,Length(s)-Pos(',',s))));
       end;                 
       Delete(str,1,Pos('|',str));
       s:=trim(Copy(str,1,Pos('|',str)-1)); 
       if trim(s)='' then err1:=true                                 //так же и для суммы единовременного платежа.                                                                                                 
                     else if pos(',',s)>0 then eSum.Text:=trim(Copy(s,1,Pos(',',s)-1)+'.'+trim(Copy(s,Pos(',',s)+1,Length(s)-Pos(',',s))));
    end;
    i:=i+1;                                                                                                                                                                                                                                                                                                                                                       
  end;                                                                                                                                                                                                            
  if c2>0 then msg:='Не указан документ для одного или более выбранного (флажком) оборудования';                                      
  if err1 then begin if msg<>'' then msg:=msg+Chr(10); msg:=msg+'Не указана сумма за оборудование'; end;                                                 
  if err2 then begin if msg<>'' then msg:=msg+Chr(10); msg:=msg+'Не указан ежемесячный платёж за аренду оборудования'; end;
  if c1>0 then answer:=messagedlg('Не у всех выбранных оборудований указан его вид (графа Обр).'+Chr(10)+'От вида оборудования зависит, какие будут комплектации'+Chr(10)+'Всё равно продолжить? (Yes), Cancel - отредактировать (добавить вид)',mtConfirmation,9,1);
  if c3>0 then answer1:=messagedlg('Выкупная стоимость оборудования = "'+trim(eVSum.Text)+'"'+Chr(10)+'Продолжить? (Yes), Cancel - отредактировать',mtConfirmation,9,1);
  if (msg<>'') or (answer=2) or (answer1=2) then begin if msg<>'' then showmessage(msg); dpOborudVAkti.ModalResult:=mrNone; end           
                                            else dpOborudVAkti.ModalResult:=mrOk;              
end;
{*** при закрытии окна выбора оборудования меняется тект и подсветка кнопки ***}        
procedure dpOborudVAktiOnHide(Sender: TfrxComponent);
var i : Integer;
    is_oborud : Boolean;                                  
begin
  is_oborud:=false;    //оборудование не выбрано (список пуст или в списке нет выбранных флажков)
  i:=0;                                                                                                                                                                                                                                                                                                           
  while i<clbOborud.Items.Count do begin
    if clbOborud.Checked(i) then begin is_oborud:=true; break; end;                                                             
    i:=i+1;                    
  end;
  if is_oborud then begin bbOborudVAkti.Caption:=' Оборудование в Акты п/п                (выбрано)'; pnlObrVAkti.Color:=c_color5; end           
               else begin bbOborudVAkti.Caption:=' Оборудование в Акты п/п              (не выбрано)'; pnlObrVAkti.Color:=c_color1; end;
end;
  

{*************************************************************************************************}
{*** Диалоговое окно выбора заявлений для приложений: Акт вып раб, Гарантийное согл, Рег карта ***}
{*************************************************************************************************}
//нажатие на флажок для Гарантийного соглашения                                                                                                     
procedure chbGarantSoglOnClick(Sender: TfrxComponent);
var i : Integer;
begin
  if chbGarantSogl.checked then begin 
     if isfirst_gsrc then begin  //один раз создаётся массив, если ещё не создан и формируется список заявлений.                                                                                                                                                                                                                                                          
        isfirst_gsrc:=false; 
        get_arZ(); 
        i:=0; while i<length(arAllZ) do begin clbZGSRC.Items.Add(arAllZ[i]); i:=i+1; end
     end;
     recolorClb(clbZGSRC,clWindow); clbZGSRC.Enabled:=true;  //для ГС и РК данные берутся из одних и тех же заявлений.                                                                                                                               
     if (chbRegCard.checked=false) and (lFilterZ_gsrc.Caption<>c_noZ_gsrc) then begin bbFilterZ_gsrc.Enabled:=true; lFilterZ_gsrc.Enabled:=true; end;           
  end else begin
     if chbRegCard.checked=false then begin                                                                   
        recolorClb(clbZGSRC,clBtnFace); clbZGSRC.Enabled:=false; bbFilterZ_gsrc.Enabled:=false; lFilterZ_gsrc.Enabled:=false;
     end;               
  end;            
end;
//нажатие на флажок для Рег карты абонента                                           
procedure chbRegCardOnClick(Sender: TfrxComponent);
var i : Integer;
begin
  if chbRegCard.checked then begin 
     if isfirst_gsrc then begin 
        isfirst_gsrc:=false; 
        get_arZ(); 
        i:=0; while i<length(arAllZ) do begin clbZGSRC.Items.Add(arAllZ[i]); i:=i+1; end;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
     end;
     recolorClb(clbZGSRC,clWindow); clbZGSRC.Enabled:=true;  //chbGarantSogl.checked=false - потому что если checked=true, то фильтр тоже уже enabled=true и активизировать ненадо.                                                                                                                                                                                                                                           
     if (chbGarantSogl.checked=false) and (lFilterZ_gsrc.Caption<>c_noZ_gsrc) then begin bbFilterZ_gsrc.Enabled:=true; lFilterZ_gsrc.Enabled:=true; end;        
  end else begin
     if chbGarantSogl.checked=false then begin                                                                              
        recolorClb(clbZGSRC,clBtnFace); clbZGSRC.Enabled:=false; bbFilterZ_gsrc.Enabled:=false; lFilterZ_gsrc.Enabled:=false; 
     end;               
  end;            
end;
//Фильтр для Гарантийного соглашения и для Рег карты                                                                                                                                                  
procedure bbFilterZ_gsrclOnClick(Sender: TfrxComponent);
var str : string;                             
    i : integer;
begin
  clbZGSRC.Items.Clear();                                                                                                                                                                                                                                                                                                  
  if isfilter_gsrc=false then begin                                                                                                                                                                                                                                                                                                                                                
     str:='';                                                                                                                                                                                                                                                     
     i:=0;
     while i<length(arAllZ) do begin
       Z.KeyValue:=arAllZ[i];
       qOL.First;
       while not qOL.eof do begin  //эдесь просто проверяются все листы и берётся заявление если лист удовлетворяет условию                                                                                                                                                                                                                                                            
         //SetFilter('Листы заявления','ID_CELL_SVC IN (-104,-10401)');     //это из договора населения в предприятиях в оригинале этого не было, поэтому отключил.                                                                                                                                                                                                    
         if (<Листы заявления."Раз.услуга Код">='80402') or (pos('GEN3',trim(<Содержание листа."Примечание">))>0) then begin  //в предприятиях было вот это                                                               
            str:='заявления на л/с есть';
            clbZGSRC.Items.Add(<Заявления абонента."Номер заявления">);
            break;                          
         end;
         qOL.Next;                           
       end;
       i:=i+1;              
     end;                                           
     qOL.First;           
     //SetFilter('Листы заявления','');                                                         
     if str='' then begin bbFilterZ_gsrc.Enabled:=false; lFilterZ_gsrc.Caption:=c_noZ_gsrc; lFilterZ_gsrc.Color:=clYellow; end
               else begin bbFilterZ_gsrc.Glyph:=bb2.Glyph; lFilterZ_gsrc.Caption:=c_back_ZList; isfilter_gsrc:=true; end;                                         
  end
  else begin
     i:=0; while i<length(arAllZ) do begin clbZGSRC.Items.Add(arAllZ[i]); i:=i+1; end;
     bbFilterZ_gsrc.Glyph:=bb1.Glyph; lFilterZ_gsrc.Caption:=txt_lFilterZ_gsrc;                        
     isfilter_gsrc:=false;                       
  end;            
end;
//нажатие на флажок для акта вып. работ                                                                                                                                   
procedure chbAktVRabOnClick(Sender: TfrxComponent);
var i : Integer;
begin
  if chbAktVRab.checked then begin                                   
     if isfirst_aktvrab then begin 
        isfirst_aktvrab:=false; 
        get_arZ(); 
        i:=0; while i<length(arAllZ) do begin clbZAktVRab.Items.Add(arAllZ[i]); i:=i+1; end;
     end;
     recolorClb(clbZAktVRab,clWindow); clbZAktVRab.Enabled:=true;
  end else begin
     recolorClb(clbZAktVRab,clBtnFace); clbZAktVRab.Enabled:=false;        
  end;            
end;
{*** при закрытии окна меняется тект и подсветка кнопки ***}        
procedure dpZPrilOnHide(Sender: TfrxComponent);
var i,c : Integer;                                             
begin
  selected_garantsogl:=false; selected_regcard:=false; selected_aktvrab:=false;   //п.у. - не выбраны документы, либо в выбранных не отмечено ни одно заявление
  if (chbGarantSogl.checked) or (chbRegCard.checked) then begin                     //эти флажки тоже используются при сборе и выводе данных при формировании договора, они для удобства.                                                                                                                                                                                                                                            
     i:=0; c:=0;             
     while i<clbZGSRC.Items.Count do begin                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
       if clbZGSRC.Checked(i) then begin
          c:=c+1;                                                        
          setLength(arGSRC,c);
          arGSRC[c-1]:=clbZGSRC.Items[i];                                                                                              
       end;
       i:=i+1;                    
     end;
     if (chbGarantSogl.checked) and (chbRegCard.checked) then begin selected_garantsogl:=true; selected_regcard:=true; end else                                   
     if (chbGarantSogl.checked) then begin selected_garantsogl:=true; end else                                   
     if (chbRegCard.checked) then begin selected_regcard:=true; end;                                   
  end;               
  if chbAktVRab.checked then begin             
     i:=0;
     while i<clbZAktVRab.Items.Count do begin
       if clbZAktVRab.Checked(i) then begin selected_aktvrab:=true; break; end;                                                             
       i:=i+1;                    
     end;
  end;               
  if (selected_aktvrab) or (selected_garantsogl) or (selected_regcard) then begin bbZPril.Caption:='Акт вып работ, Гарант согл, Регистр карта (выбраны)'; pnlZPril.Color:=c_color5; end 
                                                                       else begin bbZPril.Caption:='Акт вып работ, Гарант согл, Регистр карта (не выбраны)'; pnlZPril.Color:=c_color1; end;
end;
  

{******************************************************************************}
{*** Виды связи имеющиеся у абонента и подключаемые, для отметки в договоре ***} //такую большуюя процедуру пришлось делать только ради этих "крестиков" )                                                                                                                            
{******************************************************************************} //используемые слои услуг - это из оигинала типовой ГД.                                                                                                                                                                                                              
procedure vidisvyazi();
var i, id_layer_cell,id_const_layer_cell : integer;
begin
  услуги_мс:=''; услуги_внз:=''; услуги_мг_мн:=''; услуги_шпд:=''; услуги_тв:='';
  //сначала ищутся в пост. услугах.                                                                                                                                                                         
  qPU.First;                
  while not qPU.eof do begin                                                          
     id_layer_cell:=<Постоянные услуги абонента."ИД слоя">;         
     // Основной ТА
     if (id_layer_cell=-11006) then begin
        услуги_мс:='X'; if Length(<Постоянные услуги абонента."Наим.набора МТР">)<>0 then begin услуги_внз:='X'; услуги_мг_мн:='X'; end;
     end;
     // internet
     if (id_layer_cell=-11001) or (id_layer_cell=-11004) or (id_layer_cell=-11008) or (id_layer_cell=-11002) or (id_layer_cell=-12000) then услуги_шпд:='X';
     // TV
     if (id_layer_cell=-11003) then услуги_тв:='X';
     qPU.Next;
  end;
  qPU.First;

  //если какие-то не нашёл, ищет среди заявлений выбранных для формирования Акта вып. работ. 
  //т.к. он всегда печатается с договором и обязательно использует все заявления с подключаемыми услугами
  if (услуги_мс='') or (услуги_внз='') or (услуги_мг_мн='') or (услуги_шпд='') or (услуги_тв='') then begin
     i:=0;
     while i<clbZAktVRab.Items.Count do begin
       if clbZAktVRab.checked(i) then begin
          Z.KeyValue:=clbZAktVRab.Items.Strings[i];                                                                                                               
          qOL.First;
          while not qOL.eof do begin
            id_layer_cell:=<Листы заявления."ИД слоя">;
            id_const_layer_cell:=<Содержание листа."Пост.ИД слоя">;                    
            if (услуги_мс='') or (услуги_внз='') or (услуги_мг_мн='') then begin //утановка основгого ТА                                                                                                                      
               if (id_layer_cell=-109) or (id_layer_cell=-105) or (id_layer_cell=-10501) then begin
                  if (Length(<Листы заявления."Номер устройства">)=10) and ((id_const_layer_cell=-11006) or (id_const_layer_cell=-11008)) then begin
                     услуги_мс:='X'; if Length(<Содержание листа."Наим.набора МТР">)<>0 then begin услуги_внз:='X'; услуги_мг_мн:='X'; end;
                  end;
               end; //-109
            end;                         
            if услуги_шпд='' then begin  //internet                                                         
               if (id_layer_cell=-101) or (id_layer_cell=-10101) then 
                  if (id_const_layer_cell=-11001) or (id_const_layer_cell=-11004) or 
                     (id_const_layer_cell=-11008) or (id_const_layer_cell=-11002) then услуги_шпд:='X';
               if (id_layer_cell=-102) or (id_layer_cell=-10201) then услуги_шпд:='X';
            end;
            if услуги_тв='' then begin    //TV                                                            
               if (id_layer_cell=-104) or (id_layer_cell=-10401) then 
                  if (id_const_layer_cell=-11003) then услуги_тв:='X';
            end;                            
            qOL.Next;
          end;
       end;
       i:=i+1;                                          
     end;
     qOL.First;  
  end;
end;
  
{************************************}
{*** Проверка перед печатью формы ***}
{************************************}
procedure bOkOnMouseDown(Sender: TfrxComponent; Button: TMouseButton; Shift: Integer; X, Y: Integer);
var i, answerR, cs,cst,csu,cr,ca,cau,cvz,cvk : integer;
    s, s1, str, mesR : string;                                            
begin
  bOk.ModalResult:=mrOK;
  SetLength(arSobst,0); SetLength(arSobstR,0); SetLength(arArenda,0); SetLength(arVozvrat,0); SetLength(arVikup,0);             
  qR.close; qR.open;      
  i:=0; s:=''; s1:=''; str:=''; mesR:=''; answerR:=0; cs:=0; cr:=0; ca:=0; cvz:=0; cvk:=0; cst:=0;                                                                                   
  while i<clbOborud.Items.Count do begin                   //перебор всего списка                                              
    if clbOborud.Checked(i) then begin                     //если оборудование выбрано (его хотят в акт п/п)                                                                                                                                                                                                              
       s:=clbOborud.Items[i]; str:=s; delete(s,1,Pos('|',s)); delete(s,1,Pos('|',s)); delete(s,1,Pos('|',s)+2); //+2 - это поле БУ
       s:=trim(Copy(s,1,Pos('|',s)-1));   //акт:                                                             
       if (s='в собств.') or (s='торг 12') then begin      //и оно в собственность, то осталось проверить .         
          s1:=arForRassrochkiAndTorg12[i];                 //было ли оно заведено кодом для передачи в рассрочку, смотрится соответствующая позиция в массиве заявлений для рассрочки.                                                                                                                                                                                                                                                                                                                                                                                  
          if (Copy(s1,1,3)='(R)') and (pos('/',s1)>0) then begin    //если оно в рассрочку (R) и есть заявление/лист, то удаляем (R) и сохраняем в массив заявление/лист и всю строку:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
             Delete(s1,1,3);                                        //по заявлению/листу потом выбирается график рассрочки в договоре купли-продажи.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
             isSobstR:=true; SetLength(arSobstR,cr+1); arSobstR[cr]:=s1+'|'+str; cr:=cr+1;      //ниже проверка, соответствует ли заявление и лист, в котором прописано оборудование,                                                                                                                                                                                   
             setfilter('Рассрочка','STNUM='''+s1+''' and ISACTIV=''Y'' and instl_vid<>''Д''');  //сохранённый в нашем массиве, заявлению/листу из самого графика рассрочки. Если нет - это
             if <Рассрочка."Номер заявления/листа"><>s1 then mesR:=mesR+', '+s1;                //..ошибка, либо графика нет, либо в нём не правильно указано завление/лист.                                                                                                                                                                                                                                                                                              
          end else begin isSobstNotR:=true; SetLength(arSobst,cs+1); arSobst[cs]:=str; cs:=cs+1; end;  //иначе, если заявления в массиве рассрочки нет, значит это просто в собственность
       end;                                                                                            //сохраняем в массив для оборудования в собственность.                                                                                                                                                                                                                                  
       if s='торг 12' then begin     //если акт - торг 12, то тоже ищем номер заявления в массиве заявлений.                                                                                                                                                                                  
          s1:=arForRassrochkiAndTorg12[i];
          //удаляем (R) или (Z) и далее лист заявления (если всё это есть), чтобы остался только номер заявления. (R) тоже может быть, т.к. оборудование оформляется в собственность.
          if (Copy(s1,1,3)='(R)') or (Copy(s1,1,3)='(Z)') then Delete(s1,1,3);          //оно пойдёт в Торг-12, но и договор купли-продажи с рассрочкой будет тоже печататься к нему.                                                                                                                                                                                           
          if Pos('/',s1)>0 then s1:=Copy(s1,1,Pos('/',s1)-1);                           //все заявления оборудования, передаваемого Торгом-12, будут "Номером документа" Торга-12                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
          isSobstT12:=true; SetLength(arSobstT12,cst+1); arSobstT12[cst]:=s1+'|'+str; cst:=cst+1;                           //заявления и строки сохраняются в соответствующий масив
       end;                          //для остальных в их массивы сохраняются только строки.                                                                                                                            
       if s='в аренду' then begin isArenda:=true; SetLength(arArenda,ca+1); arArenda[ca]:=str; ca:=ca+1; end;    
       if s='возврат' then begin isVozvrat:=true; SetLength(arVozvrat,cvz+1); arVozvrat[cvz]:=str; cvz:=cvz+1; end;                                                                                                                                                       
       if s='выкуп' then begin isVikup:=true; SetLength(arVikup,cvk+1); arVikup[cvk]:=str; cvk:=cvk+1; end;                                                                                                                                                                                                                                                                                                                                                         
       if s='аренда[у]' then begin isArendaUsl:=true; SetLength(arArendaUsl,cau+1); arArendaUsl[cau]:=str; cau:=cau+1; end;         
       if s='собств[у]' then begin isSobstUsl:=true;  SetLength(arSobstUsl,csu+1); arSobstUsl[csu]:=str; csu:=csu+1; end;    
    end;                                                                                                                                                                                                                                                                                                                                                      
    i:=i+1;
  end;
  setfilter('Рассрочка','');
  if mesR<>'' then begin         //вывод собщения о непривязанных графиках                                                                                          
     delete(mesR,1,2);      
     mesR:=mesR+Chr(10)+Chr(10)+'Это заявления/листы с оборудованием, передаваемым в рассрочку,'+Chr(10)+'для которого нет связи с соответствующим графиком рассрочки'+Chr(10)+'(т.е. в данном графике заявление/лист не соответствует)'+Chr(10)+'желательно проверить и подкорректировать это перед печатью формы'+Chr(10)+'иначе не выведутся нужные графики'+Chr(10)+Chr(10)+'Всё равно продолжить? (Yes - оставить как есть, Cancel - проверить/поправить)';                                                   
     answerR:=messagedlg(mesR,mtConfirmation,9,1);
  end;
    
  if (answerR=2) then bOk.ModalResult:=mrNone else bOk.ModalResult:=mrOK;                                      
end;

{*************************}{*******************************************************************}
{*** Нажатие кнопки OK ***}{*** Сохранение всех установок, для вывода заполненного договора ***}
{*************************}{*******************************************************************}
procedure bOKOnClick(Sender: TfrxComponent);
var i,j, n : integer;
    str, akt : string;                                                
begin                
  if bOk.ModalResult=mrOK then begin                                                     
     номер_договора:=<Абонент."Номер договора">;                                    
     дата_договора:=DateToStr(deDDate.Date);         
     населенный_пункт_договора:=<Абонент."НасПункт Абонента">;
     дата_приложений:=DateToStr(dePril.Date)+'г.';                                                                                                        
     оператор_в_лице:='в лице '+mOperLicoOsnova.Lines.Text;            
     оператор_фио:=Fio(<Пользователи АСР Старт."Наименование">);          
     абонент_фио:=Fio(trim(AbonentFIO.Text));
     if trim(AbonentDolzhnost.Lines.Text)<>'' then абонент_должность:=AbonentDolzhnost.Lines.Text else абонент_должность:='';                                                                                                                                                                   
     if trim(AbonentFIO_rp.Text)<>'' then абонент:=AbonentFIO_rp.Text else begin абонент:='_____________________________________________________________________'; end;
     if trim(AbonentOsnovanie.Lines.Text)<>'' then абонент_основание:=trim(AbonentOsnovanie.Lines.Text) else абонент_основание:='______________________________________________ __________________________________________________________';                                                                                                                         
     абонент_в_лице_на_основании:='в лице '+абонент_должность+' '+абонент+', действующ(его)ей на основании '+абонент_основание;                            
            
     if chbDog.Checked then begin         //данные только для договора                                                                               
        if chbDPreamb.checked then pDogPreamb.Visible:=true else pDog.Visible:=true;
            
        if chbDEmpDate.Checked=false then begin договор_день:=Copy(дата_договора,1,2); договор_месяц:=Copy(дата_договора,4,2); договор_год:=Copy(дата_договора,7,4); end
                                     else begin дата_договора:=''; договор_год:=''; договор_месяц:=''; договор_день:=''; end;
        п_индекс:=paIndex.Text; п_область:=paOblast.Text; п_район:=paRayon.Text; п_населенный_пункт:=paPunkt.Text; п_улица:=paUliza.Text; п_дом:=paDom.Text; п_корпус:=paKorpus.Text; п_квартира:=paKvartira.Text;
        if chbPoPochtAdres.checked then begin 
           адс_индекс:=п_индекс; адс_область:=п_область; адс_район:=п_район; адс_населенный_пункт:=п_населенный_пункт; адс_улица:=п_улица; адс_дом:=п_дом; адс_корпус:=п_корпус; адс_квартира:=п_квартира;
        end else begin адс_индекс:=''; адс_область:=''; адс_район:=''; адс_населенный_пункт:=''; адс_улица:=''; адс_дом:=''; адс_корпус:=''; адс_квартира:=''; end;
        адрес_сайта_испа:='https://ispa.sibirtelecom.ru';
        логин_испа:=<Абонент."Номер л/с">;
        if <Абонент."Рег. ИСПА"><>'1' then пароль_испа:=<Абонент."Пароль ИСПА">;       
        if chbPoPochtAdres.Checked then адс_по_месту_регистрации:='X' else адс_по_месту_регистрации:='';
        if cadsOffice.Checked then адс_получение_в_офисе:='X' else адс_получение_в_офисе:='';
        if cbEmail.Checked then адс_email:='X' else адс_email:='';
        if cadsIspa.Checked then адс_личный_кабинет:='X' else адс_личный_кабинет:='';        
        интернет_почта:=eadEmail.Text;
            
        vidisvyazi(); //Виды связи имеющиеся у абонента и подключаемые, для отметки в договоре.                                                                                                                                                                            
          
        метод_оплаты_услуг_кредит:=''; метод_оплаты_услуг_аванс:=''; метод_оплаты_услуг_аванс_пу:='';
        case Metod.ItemIndex of  
           0: метод_оплаты_услуг_кредит:='Х';          
           //1: метод_оплаты_услуг_аванс:='Х';          
           1: метод_оплаты_услуг_аванс_пу:='Х';          
        end;
        if rbSpamYES.Checked then begin реклама_согласен:='Х'; реклама_не_согласен:=''; end else begin реклама_согласен:=''; реклама_не_согласен:='X'; end;
        if rb09YES.Checked then begin справка_09_согласен:='Х'; справка_09_не_согласен:=''; end else begin справка_09_согласен:=''; справка_09_не_согласен:='X'; end;
        if rbDBessrochno.Checked then begin срок_действия_договора_не_определен:='X'; срок_действия_договора:=''; end 
                                 else begin срок_действия_договора_не_определен:=''; срок_действия_договора:=DateToStr(deDSrokDog.Date); end;
        if chbDVstVSilu.Checked then дата_вступл_договора_в_силу:=DateToStr(deDDateVstVSilu.Date) else дата_вступл_договора_в_силу:='';
        тех_поддержка:='062';                                                      
        бюро_ремонта:='065';            
        мобильный:=eMobile.Text;
     end;
     //эти данные используются во всех этих перечисленных документах                                                                                                                                            
     if (chbDog.Checked) or (selected_p1<>'') or (selected_p2<>'') or (isSobstR) or (isSobstNotR) or (isArenda) or (isVikup) then begin                                             
        if selected_p1<>'' then begin pMS.Visible:=true;          //если выбран акт П1 по л/с - то просто печатаем его                                                                                                                                                           
           if selected_p1='по заявлению' then begin                 //а если по заявлениям, то все выбранные заявления сохраняем в массив.                                                                                                                               
              i:=0; j:=0;                                    
              while i<clbZP1.Items.Count do begin
                if clbZP1.Checked(i) then begin setLength(arZp1,j+1); arZp1[j]:=clbZP1.Items.strings(i); j:=j+1; end;                                                             
                i:=i+1;                    
              end;
           end;               
        end;               
        if selected_p2<>'' then begin pInet.Visible:=true;        //для П2 так же.                                                                                         
           if selected_p2='по заявлению' then begin
              i:=0; j:=0;                                    
              while i<clbZP2.Items.Count do begin
                if clbZP2.Checked(i) then begin setLength(arZp2,j+1); arZp2[j]:=clbZP2.Items.strings(i); j:=j+1; end;                                                             
                i:=i+1;                    
              end;
           end;               
        end;               
                     
        if (rbRF.Checked) then begin
           //филиал_наимен:=<Филиал."Наименование филиала">;
           филиал_цт_наимен:='';                                                       
           филиал_адрес:=<Филиал."Адрес">;
           филиал_тел:=<Филиал."Тел Юридического местоположения">;
           филиал_инн:=<Филиал."ИНН">;        
           филиал_кпп:=<Филиал."КПП">;            
           филиал_банк_наимен:=<Филиал."Банк">;
           филиал_банк_рс:=<Филиал."Р/С">;
           филиал_банк_кс:=<Филиал."К/С">;
           филиал_банк_бик:=<Филиал."БИК Банка">;  
        end else begin
           //филиал_наимен:=<СП Абонента."Наименование филиала">;
           if (<СП Абонента."Наименование филиала">=<Филиал."Наименование филиала">) then филиал_цт_наимен:=''
                                                                                     else филиал_цт_наимен:=chr(13)+<СП Абонента."Наименование ЦТ">;
           филиал_адрес:=<СП Абонента."Адрес">;
           филиал_тел:=<СП Абонента."Тел Юридического местоположения">;
           филиал_инн:=<СП Абонента."ИНН">;          
           филиал_кпп:=<СП Абонента."КПП">;               
           филиал_банк_наимен:=<СП Абонента."Банк">;
           филиал_банк_рс:=<СП Абонента."Р/С">;
           филиал_банк_кс:=<СП Абонента."К/С">;
           филиал_банк_бик:=<СП Абонента."БИК Банка">;                 
        end;
        филиал_наимен:='Иркутский филиал ОАО "Ростелеком"';        
        if pos('ИРКУТСКАЯ ОБЛАСТЬ ОБЛ.',филиал_адрес)>0 then delete(филиал_адрес,pos(' ОБЛ.',филиал_адрес),5);

        //реквизиты оператора
        реквизиты_оператора:=филиал_наимен+Chr(10)+                  
                             'Почтовый адрес: '+филиал_адрес+Chr(10)+  
                             'Юридический адрес: 191002, г. Санкт-Петербург, ул. Достоевского, дом 15'+Chr(10)+
                             'Банк, обслуживающий счета (филиала Оператора), '+филиал_банк_наимен+Chr(10)+    
                                 {if cbSysPay.ItemIndex=0 then реквизиты_оператора:=реквизиты_оператора+} //<Абонент."Р/С безадресный (Иркутск)">     
                             'р/с '+<Получатель платежа."Р/С">+Chr(10)+   
                                 {else реквизиты_оператора:=реквизиты_оператора+                                                                                                 
                                 'р/с '+rs_mes+Chr(10)+  
                                 'р/с '+rs_mg+Chr(10)+    
                                 'р/с '+rs_uv+Chr(10)+  
                                 'р/с '+rs_neos+Chr(10);
                                 реквизиты_оператора:=реквизиты_оператора+}                               
                             'к/с '+филиал_банк_кс+Chr(10)+  
                             'БИК '+филиал_банк_бик+', ИНН '+филиал_инн+', КПП '+филиал_кпп;  
            
        фирменное_наименование:=UrName.Lines.Text;
        свидетельство_о_регистрации:=SvidReg.Lines.Text;                                                                    
        ю_индекс:=uaIndex.Text; ю_область:=uaOblast.Text; ю_район:=uaRayon.Text; ю_населенный_пункт:=uaPunkt.Text; ю_улица:=uaUliza.Text; ю_дом:=uaDom.Text; ю_корпус:=uaKorpus.Text; ю_квартира:=uaKvartira.Text;
        банк:=Bank.Lines.Text; р_с:=RS.Text; к_с:=KS.Text; бик:=BIK.Text; инн:=INN.Text; кпп:=KPP.Text;
        контактный_телефон:=eKontaktPhone.Text;                  
        факс:=eFaks.Text;                                        
        if cbEmail.Checked then емаил:=eadEmail.Text else емаил:='';
  
        //реквизиты абонента
        реквизиты_абонента:='Фирменное наименование: '+trim(фирменное_наименование)+Chr(10)+                      
                            'Юридический адрес: ';
        if trim(ю_индекс)<>'' then str:=str+', '+trim(ю_индекс);                                                                       
        if trim(ю_область)<>'' then str:=str+', '+trim(ю_область);                                                                       
        if trim(ю_район)<>'' then str:=str+', '+trim(ю_район);                                                                       
        if trim(ю_населенный_пункт)<>'' then str:=str+', '+trim(ю_населенный_пункт);                                                                       
        if trim(ю_улица)<>'' then str:=str+', '+trim(ю_улица);                                                                       
        if trim(ю_дом)<>'' then str:=str+', '+trim(ю_дом);                                                                       
        if trim(ю_корпус)<>'' then str:=str+', '+trim(ю_корпус);                                                                       
        if trim(ю_квартира)<>'' then str:=str+', '+trim(ю_квартира);
        delete(str,1,2);
        реквизиты_абонента:=реквизиты_абонента+str+Chr(10)+
                            'Свидетельство о регистрации (номер свидетельства, дата гос.регистрации, кем зарегистрирован): '+trim(свидетельство_о_регистрации)+Chr(10)+
                            'Банковские реквизиты: Банк, обслуживающий счета, '+trim(банк)+Chr(10);  
                            //'Лицевой счет';                                         
        if (<ДопИнфо по абоненту."Л/С УФК"><>'') then реквизиты_абонента:=реквизиты_абонента+'Лицевой счет УФК: '+<ДопИнфо по абоненту."Л/С УФК">+Chr(10);    
                                                 //else str:=': '+<Абонент."Номер л/с">;           
        реквизиты_абонента:=реквизиты_абонента+//str+Chr(10)+
                            'р/с '+р_с+Chr(10)+                       
                            'к/с '+к_с+Chr(10)+                       
                            'БИК '+бик+', ИНН '+инн+', КПП '+кпп+Chr(10)+
                            'Электронный адрес: ';
        if trim(емаил)<>'' then str:=trim(емаил) else str:='___________________________________________________';                                                                                                                                                                                      
        реквизиты_абонента:=реквизиты_абонента+str+Chr(10)+
                            'Контактный телефон: ';                                                                                                                                                                                                                                                                                                                                                           
        if trim(контактный_телефон)<>'' then str:=trim(контактный_телефон) else str:='_______________________';                                                                                                                                                                                      
        реквизиты_абонента:=реквизиты_абонента+str+', Факс: '+факс;
     end;

     if (pnlObrVAkti.Color=c_color5) then begin      //если выбрано оборудование:                                                                                                                             
        if (isSobstR) or (isSobstNotR) then begin      //если есть в собственность (в рассрочку или без):                                                                                                
           pDogKupProd.Visible:=true; pAktppSR.Visible:=true; mdAktppS.RowCount:=Length(arSobst); mdAktppR.RowCount:=Length(arSobstR);                                               
           if (isSobstR) and (isSobstNotR) then begin  //если есть оба варианта:, то выводится соответствующий текст в некоторых пунктах.                                                                                                                                                                       
              txtO01:=' Если Оборудование оплачивается единовременным платежом в порядке, определенном п. 3.3.1. Договора, то 1 вариант:';
              txtO1:=' Оборудование передается Покупателю в течение 10 (Десяти) дней со дня оплаты.';
              txtO02:=' Если Оборудование оплачивается в рассрочку в порядке, определенном в п. 3.3.2. Договора, то 2 вариант:';
              txtO2:=' Оборудование передается Покупателю в течение 10 (Десяти) дней со дня подписания настоящего Договора.';
              txtO3:=':'; txtO4:=''; mdOS_txt.Visible:=true; mdOS_h.Visible:=true; mdOS_d.Visible:=true; mdOS_i.Visible:=true; mdOS_d.RowCount:=Length(arSobst);
              mdOR_txt.visible:=true; mdOR_txt1.visible:=true;     //и выводятся некоторые блоки.                                                                                  
              npO1:='4'; npO2:='5'; end else                       //соответствующая нумерация пунктов                                                                                                                                   
           if (isSobstR) and (isSobstNotR=false) then begin   //если только в рассрочку:                                                        
              txtO01:=''; txtO1:=''; txtO02:=''; txtO2:=' Оборудование передается Покупателю в течение 10 (Десяти) дней со дня подписания настоящего Договора.';
              txtO3:=''; txtO4:=' с предоставлением рассрочки платежа в соответствии со следующим графиком:'; mdOR_txt1.visible:=true; npO1:='4'; npO2:='5'; end else
           if (isSobstR=false) and (isSobstNotR) then begin   //если только без рассрочки, просто продажа в собственность: то свой текст, блоки, номера.                                                                                                                                                                                                   
              txtO01:=''; txtO1:=' Оборудование передается Покупателю в течение 10 (Десяти) дней со дня оплаты.'; txtO02:=''; txtO2:='';
              txtO3:=' единовременным платежом в течение 10 (Десяти) дней с момента подписания настоящего Договора.'; txtO4:='';
              mdOS_h.Visible:=true; mdOS_d.Visible:=true; mdOS_d.RowCount:=Length(arSobst); mdOS_i.Visible:=true; npO1:='2'; npO2:='3'; end;
        end;                  
        if (isSobstT12) then begin       //если есть в Торг-12: берутся данные для Торг-12                                                                                                         
           pTorg12.Visible:=true;                     
           t12_date:=DateToStr(dePril.Date);  
           t12_dd:=Copy(t12_date,1,2);
           case Copy(t12_date,4,2) of
             '01': t12_month:='Январь';
             '02': t12_month:='Февраль';                                              
             '03': t12_month:='март';                                                                                                               
             '04': t12_month:='Апрель';                                              
             '05': t12_month:='Май';                                              
             '06': t12_month:='Июнь';                                              
             '07': t12_month:='Июль';                                              
             '08': t12_month:='Август';                                              
             '09': t12_month:='Сентябрь';                                              
             '10': t12_month:='Октябрь';                                              
             '11': t12_month:='Ноябрь';                                              
             '12': t12_month:='Декабрь';
           end;                 
           t12_yyyy:=Copy(t12_date,7,4);
           t12_rekvizits:='Иркутский филиал ОАО "Ростелеком", 664011 г.Иркутск, ул.Пролетарская,12, ИНН 7707049388, КПП 380843001,'+Chr(10)+
                          'р/с '+<Получатель платежа."Р/С">+' в Иркутский филиал ОАО АКБ "СВЯЗЬ-БАНК", БИК 042520784, корр/с 30101810700000000784'; //t12_rs_neos               
           t12_abon_okpo:=<Абонент."ОКПО">;
           t12_abonent_rekviz:=фирменное_наименование+', ИНН '+инн+' КПП '+кпп+' р/с '+р_с+' Банк '+trim(банк)+' БИК '+бик;
           t12_platelshik:=фирменное_наименование;
           iskluchenie:=<Абонент."Номер л/с">;
           if iskluchenie='2572' then begin      //это какой-то л/с, для которого, в качестве исключения, по другому берутся реквизиты. Если будут ещё такие л/с, можно их включать сюда же.                                                                                                                                                                                                                                                                                                                       
              t12_platelshik:=t12_abonent_rekviz;                      
              str:='';                                                                          
              if trim(ю_индекс)<>'' then str:=str+', '+trim(ю_индекс);                                                                       
              if trim(ю_область)<>'' then str:=str+', '+trim(ю_область);                                                                       
              if trim(ю_район)<>'' then str:=str+', '+trim(ю_район);                                                                       
              if trim(ю_населенный_пункт)<>'' then str:=str+', '+trim(ю_населенный_пункт);                                                                       
              if trim(ю_улица)<>'' then str:=str+', '+trim(ю_улица);                                                                       
              if trim(ю_дом)<>'' then str:=str+', '+trim(ю_дом);                                                                       
              if trim(ю_корпус)<>'' then str:=str+', '+trim(ю_корпус);                                                                       
              if trim(ю_квартира)<>'' then str:=str+', '+trim(ю_квартира);
              delete(str,1,2);
              t12_abonent_rekviz:=фирменное_наименование+', '+str+', ИНН '+инн+' КПП '+кпп+' р/с '+р_с+' Банк '+trim(банк)+' БИК '+бик;
           end;                     
        end;      //далее особенности вывода других актов. В очновном задаётся кол-во строк для вывода оборудования, заранее, т.к. использую более быстрый способ вывода, чем onManualBuild                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
        if (isArenda)    then begin pDSA.Visible:=true; pAktppA.Visible:=true; mdOAktppA.RowCount:=Length(arArenda); end;                                                          
        if (isVikup)     then begin pDSV.Visible:=true; mdDSV.RowCount:=Length(arVikup); end;                                                          
        if (isVozvrat)   then begin pAktppVZ.Visible:=true; mdOAktppVZ.RowCount:=Length(arVozvrat); if rbVZud.checked then mdOVZUd.Visible:=true else mdOVZneud.Visible:=true; end;                                                          
        if (isArendaUsl) then begin pAktppAU.Visible:=true; mdOAktppAU.RowCount:=Length(arArendaUsl); end;                                                          
        if (isSobstUsl)  then begin pAktppSU.Visible:=true; mdOAktppSU.RowCount:=Length(arSobstUsl); end;                                                          
     end;
                               
     if (pnlZPril.Color=c_color5) then begin
        if selected_aktvrab then begin pAktVipRab.Visible:=true; end;                                      
        if selected_garantsogl then begin pGarant.Visible:=true; end;             
        if selected_regcard then begin pRegCardIPTV.Visible:=true; end;  
     end;

     if chbInfPrav.checked then pPrav.Visible:=true;                                                    
     if chbInfOsobSHPD.checked then pOsobSHPD.Visible:=true;                             
     if chbInfOsobUsl.checked then pOsobUsl.Visible:=true;                       
     if chbInfDopSoglIPTV.checked then pDSIPTV.Visible:=true;                     
     if chbInfKanali.checked then begin pKanali.Visible:=true; 
        if chbKDelov.checked then mdDelov.Visible:=true;  
        if chbKPubl.checked  then mdPubl.Visible:=true;  
        if chbKGost.checked  then mdGost.Visible:=true;                           
     end;
      
     номер_телефона:=<Содержание заявления."Номер телефона">;
     контактный_телефон_рег:=контактный_телефон;                          
     дата_выполнения_работ:=iif(StrToInt(Copy(DateToStr(<Содержание заявления."Дата установки">),7,4))<1990,DateToStr(<Содержание заявления."Дата создания заявления">),DateToStr(<Содержание заявления."Дата установки">));  
  end;
end;


      
{**********************************************************************************}
{*** Процедуры для приложений П1 и П2 (закладки pMS и pInternet соответственно) ***}
{**********************************************************************************}
procedure pMSOnBeforePrint(Sender: TfrxComponent);
begin Z.KeyValue:='0'; end;    //заявление не выбрано                                                                                                                              
{*** П1 (pMS) ***}
procedure pMSOnManualBuild(Sender: TfrxComponent);
var cntvz, cntmgmn, osnpos,osnlen, cnt,cnt1, i : Integer;
    kat, osnstr,osns,osnparkat, pu_cod, pu_dateb, str : String;
    isparalleltel : Boolean;                                             
begin                                   
  osnstr:=',,, '; osns:=''; osnparkat:=''; osnpos:=0; osnlen:=0;                                                              
  нп:=1;                
  if selected_p1='по заявлению' then begin   //здесь эта переменная тоже пригождается                                                                                                             
     i:=0;      
     while i<Length(arZp1) do begin          //эти массивы формировались в процедуре главной кнопки ОК, в них только выбранные заявления для актов П1, П2                                                                                                                                                                                                                                           
       Z.KeyValue:=arZp1[i];                 //каждое заявление ограничивается только листами с услугами (это телефонные услуги листов - разовые):                                                                                                                                                                                                                         
       {if нп=1 then }SetFilter('Листы заявления','ID_CELL_SVC IN (-109,-10501,-105)');
       qOL.First;
       //Engine.ShowBand(pMSH);
       while not qOL.eof do begin              //затем их просматриваем                                                                                                                                                        
         тел:='';                                                                                  
         вид_оборудования_ота:='';                  
         схема_включения:=''; 
         зона_ответст_обсл_сооруж_связи:=''; 
         адрес_мпу:=''; 
         дата_начала:=''; 
         дата_конца:=''; 
         внз:=''; 
         мгмн:=''; 
         оператор_мгмн:=''; 
         тарифный_план_спус:=''; 
         тарифный_план_мг_мн:='';
                                               //только для листов с пост услугой линии                                                                                                                                                                                                              
         if (Length(<Листы заявления."Номер устройства">)=10) and ((<Содержание листа."Пост.ИД слоя">=-11006) or (<Содержание листа."Пост.ИД слоя">=-11008)) then begin
            тел:=trim(<Листы заявления."Номер устройства">);                                                         
            if тел<>'' then begin              //если есть телефон, берём данные                                                                                                                                                            
               вид_оборудования_ота:=<Содержание листа."Вид оборудования">;            
               схема_включения:=<Содержание листа."Схема включения">;
               зона_ответст_обсл_сооруж_связи:=<Содержание листа."Граница обслуживания">+' '+<Содержание листа."Зона ответсвенности">;
                 if trim(зона_ответст_обсл_сооруж_связи)='' then зона_ответст_обсл_сооруж_связи:=<Содержание заявления."Границы обслуживания">+' '+<Содержание заявления."Зона ответсвенности">;
                 if trim(зона_ответст_обсл_сооруж_связи)='' then зона_ответст_обсл_сооруж_связи:=<Содержание заявления."Граница обсл.ДУ">+' '+<Содержание заявления."Зона отв.действ.устр.">;  
               тарифный_план_спус:=<Содержание листа."План АПУС">;
                 if trim(тарифный_план_спус)='' then тарифный_план_спус:=<Содержание заявления."Тарифный план">;                                                                                          
                 if trim(тарифный_план_спус)='' then тарифный_план_спус:=<Содержание заявления."Тар.план действ.устр.">;                
               тарифный_план_мг_мн:=<Содержание листа."Наим.набора МТР">;          
               дата_начала:=<Листы заявления."Начало действия">;       
               if дата_начала='30.12.1899' then дата_начала:='';  //кажется такая дата берётся п.у., если даты нет                                                                                                                                                                                     
               дата_конца:='';
               адрес_мпу:=<Содержание листа."МПУ услуги">;        
               SetFilter('Постоянные услуги абонента','phone='''+тел+''' and cod in (''10286'',''10287'',''10288'',''10289'',''10290'',''10291'',''10295'',''102950'',''102951'')');
               cntvz:=0; cntmgmn:=0;                               //здесь в пост. услугах смотрится по услугам приостановлен ли доступ к внутризоновой и мг/мн связи                                                                                                                                                                                                              
               qPU.First;                                                                                                                                                    
               while not qPU.eof do begin
                 if (<Постоянные услуги абонента."Код">='10286') or (<Постоянные услуги абонента."Код">='10290') or (<Постоянные услуги абонента."Код">='10295') or (<Постоянные услуги абонента."Код">='102950')
                 then cntvz:=cntvz+1;                                                                                                                      
                 if (<Постоянные услуги абонента."Код">='10287') or (<Постоянные услуги абонента."Код">='10288') or (<Постоянные услуги абонента."Код">='10295') or (<Постоянные услуги абонента."Код">='102950')
                 then cntmgmn:=cntmgmn+1;                                                                                                                                               
                 qPU.Next;                   
               end;
               if cntvz>0 then внз:='Нет' else внз:='Да';            //поэтому, если услуга есть - значит связи нет (список услуг мог уже устареть)                                                                                                                                                                                            
               kat:=trim(<Содержание листа."Категория телефона">);   //берётся категория телефона                                                                                                                                                                                           
               if cntmgmn>0 then мгмн:='Нет' else begin              //если есть мг/мн связь и категория пустая                                                                                                                                                                                                                                                                      
                  if kat='' then begin                               //то мгмн берётся как "категория МТР"                                                                                                                                                                           
                     SetFilter('Устройства по договору','phone='''+тел+''' and exists(select 1 from n_const_svc sc where sc.const_svc_id='+IntToStr(<Устройства по договору."ИД услуги">)+' and sc.svc_id in (select svc_id from n_spr_titul_pattem where id_titul_pattem=1) and '+IntToStr(<Устройства по договору."ИД услуги">)+' not in (110057,200599,29020,29022,29030,37415820,52014,21536530,700504,71998,54076) and rownum=1)');
                     kat:=<Устройства по договору."Категория МТР">;
                     SetFilter('Устройства по договору','');                              
                  end;                          
                  if Pos('0-категория',kat)<>0 then мгмн:='Hot choice' else мгмн:=kat;  //"hot choice" если она 0-вая, почему такой алгоритм, уже не помню, делали это с Наташей Трубачёвой                                                                                                                                                                                                                                
               end;
               if схема_включения='Основная' then osnstr:=osnstr+тел+'```'+мгмн+',,, '; //мгмн для всех основных телефонов сохраняется в такую строку, чтобы потом                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
               if схема_включения='Параллельная' then begin                               //если попадётся параллельный
                  osnpos:=Pos(',,, '+тел+'```',osnstr);                                   //найти в этой строке его основной                                                                                                                                                               
                  if osnpos>0 then begin                                                  //и если он есть, (берётся его позиция в строке и длина кусочка с номером, перед "мгмн")                                                                                                   
                     osnlen:=Length(',,, '+тел+'```');                                        
                     osns:=osnstr; delete(osns,1,osnpos+osnlen-1);                        //то обрезается по самый "мгмн" его основного телефона
                     osnparkat:=Copy(osns,1,Pos(',,, ',osns)-1);                          //который потом берётся и выводится для параллельного                                                                                                                                                                                                                                                                         
                     мгмн:=osnparkat;                                                     //т.е. для параллельного выводится мгмн основного                                 
                  end else мгмн:='';                                                    
               end;                       
               оператор_мгмн:='';                
               if Pos('РТК',kat)<>0 then оператор_мгмн:='РТК';                                              
               if Pos('МТТ',kat)<>0 then оператор_мгмн:='МТТ';                                              
               SetFilter('Постоянные услуги абонента','');                      
               Engine.ShowBand(mdDevices);
               нп:=нп+1;                                 
            end;                    
         end;                               
         qOL.Next;                   
       end;
       SetFilter('Листы заявления','');
       i:=i+1;                       
     end;                 
     Engine.ShowBand(pMSF);
  end;
    
  if selected_p1='по л/с' then begin                                                  
     qUD.First; 
     //Engine.ShowBand(pMSH);
     isparalleltel:=false; cnt:=0; cnt1:=-1; str:='';                                                                         
     while not qUD.eof do begin                     //здесь берётся из набора Устройства по договору, это если не путаю - кнопка Телефон в старте (телефонные услуги)                                                                                                                                                                                                                                                     
       if isparalleltel=false then begin            //если тел не параллельный-основной, тогда данные надо очистить, а если параллельный, то нет, т.к. для него поля нужно заполнить так же
          тел:=''; 
          вид_оборудования_ота:=''; 
          схема_включения:=''; 
          зона_ответст_обсл_сооруж_связи:=''; 
          адрес_мпу:=''; 
          дата_начала:=''; 
          дата_конца:=''; 
          внз:=''; 
          мгмн:=''; 
          оператор_мгмн:=''; 
       end;                    
       тарифный_план_спус:=''; 
       тарифный_план_мг_мн:='';
       тел:=trim(<Устройства по договору."Номер телефона">);
       if тел<>'' then begin                                                    
          if isparalleltel=false then begin         //для основного телефона берутся данные                                                                                  
             вид_оборудования_ота:=<Устройства по договору."Вид оборудования">;
             зона_ответст_обсл_сооруж_связи:=<Устройства по договору."Граница обсл.">+' '+<Устройства по договору."Зона отвественности">;                           
             тарифный_план_спус:=<Устройства по договору."План АПУС">;
             if тарифный_план_спус='Бесплатный тарифный план' then begin тарифный_план_спус:=''; вид_оборудования_ота:=<Устройства по договору."Наименование">; end;                                                                                                                                                           
             тарифный_план_мг_мн:=<Устройства по договору."Тип тарификации">;          
             схема_включения:=<Устройства по договору."Схема включения">; 
             адрес_мпу:=<Устройства по договору."Адрес установки">;
             дата_начала:=DateToStr(<Устройства по договору."Дата начала">);
             дата_конца:='';
             if cnt=0 then setlength(arrpusvcMC,0);    //данные всегда берутся для основного телефона из соотв. набора "Устройства по договоу", а ниже в пост. услугах ищется...                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
             SetFilter('Постоянные услуги абонента','phone='''+тел+''' and cod in (''10286'',''10287'',''10288'',''10289'',''10290'',''10291'',''10295'',''102950'',''102951'',  ''2025'',''2026'',''2037'',''2088'',''2089'',''2099'',''20024'',''20025'',''20088'',''20089'',''203701'',''203702'',''203703'',''203704'',''203705'',''209901'',''209902'',''209903'',''209904'',''209905'')');
             cntvz:=0; cntmgmn:=0;                      //...есть ли у него параллельный. SetFilter оставляет только услуги, указывающие на параллельный телефон и услуги присотановления...                                                                                                                                                                                                                                                                                                          
             qPU.First;                                 //...внз и мгмн связи.                     
             while not qPU.eof do begin                 //перебераем набор этих пост услуг:                                                                                
               pu_cod:=<Постоянные услуги абонента."Код">;                                                           
               if (pu_cod='10286') or (pu_cod='10290') or (pu_cod='10295') or (pu_cod='102950') then cntvz:=cntvz+1;     //если есть эти коды - то приостановлена внз связь                                                                                                                               
               if (pu_cod='10287') or (pu_cod='10288') or (pu_cod='10295') or (pu_cod='102950') then cntmgmn:=cntmgmn+1; //если эти - то мг/мн (т.к. это коды приостановления доступа)                                                                                                                 
               if (pu_cod='2025')   or (pu_cod='2026')   or (pu_cod='2037')   or (pu_cod='2088')   or (pu_cod='2089')   or (pu_cod='2099')   or (pu_cod='20024')   or (pu_cod='20025') or
                  (pu_cod='20088')  or (pu_cod='20089')  or (pu_cod='203701') or (pu_cod='203702') or (pu_cod='203703') or (pu_cod='203704') or (pu_cod='203705') or (pu_cod='209901') or 
                  (pu_cod='209902') or (pu_cod='209903') or (pu_cod='209904') or (pu_cod='209905') then begin            //если эти - то это предоставление линии при парал.схеме                                                                                                                                                
                  pu_dateb:=<Постоянные услуги абонента."Начало действия">;                                              //значит у данного основного тел есть параллельный                                                                                                          
                  if pu_dateb='30.12.1899' then pu_dateb:='';              
                  isparalleltel:=true;                                                                                   //данные для основного уже взяты, а данные параллельного
                  cnt:=cnt+1;  //здесь cnt - кол-во параллельных телефонов                                               //..сохраняются в массив (параллельных может быть несколько,..                                                                                                                              
                  setlength(arrpusvcMC,cnt); arrpusvcMC[cnt-1]:=<Постоянные услуги абонента."МПУ.Адрес">+'```'+pu_dateb; //..сохраняются данные по всем и на следующей итерации цикла..                                                                                                                                                                                                                                                                                   
               end;                                                                                                      //..эти номера будут добавлены сразу за основным.                                                                                                                             
               qPU.Next;                                                                                                //тогда isparalleltel уже не будет false, данные вверху не сотрутся                                                                                                     
             end;                                                                                                      //текущий блок кода не выполнится, т.к. это будет не основной телефон                                                                                                                                                         
             SetFilter('Постоянные услуги абонента','');                                                              //а параллельный, а выполнится.....                                                                                               
             if cntvz>0 then внз:='Нет' else внз:='Да';     //тут всё примерно так же как для выбора из заявления                                                                                                                                        
             kat:=<Устройства по договору."Категория МТР">;  
             if cntmgmn>0 then мгмн:='Нет' else begin
                if Pos('0-категория',kat)<>0 then мгмн:='Hot choice' else мгмн:=kat;
             end;
             if Pos('РТК',kat)<>0 then оператор_мгмн:='РТК';                                                                                                                                                    
             if Pos('МТТ',kat)<>0 then оператор_мгмн:='МТТ';                                              
          end else begin                                       //.....эта часть кода - для параллельных телефонов, довыведет их сразу за основным                                                                                                                                     
             схема_включения:='Параллельная';                  //схема соответственно..                                                                   
             str:=arrpusvcMC[cnt1];                            //адрес мпу и дата начала услуги - из массива для первого параллельного и затем для остальных                                                                                                                                                                                                         
             адрес_мпу:=Copy(str,1,pos('```',str)-1);          //cnt1 уже будет =0 т.к. вывод происходит на следующей итерации цикла, а не в текущей, когда он был =-1                                                                                                                                                                                                                                             
             delete(str,1,pos('```',str)+2);                                                                          
             дата_начала:=str;                                                          
          end;                    
          if дата_начала='30.12.1899' then дата_начала:='';              
          if not qUD.eof then Engine.ShowBand(mdDevices);
          нп:=нп+1;                                 
       end;                                                                                                          //cnt1 накручивается здесь, а cnt следит когда выберется последний                                                                                                                                                                                                                       
       if isparalleltel then begin if cnt=0 then begin isparalleltel:=false; qUD.Next; cnt:=1; cnt1:=-2; str:=''; end; cnt:=cnt-1; cnt1:=cnt1+1; end //параллельный телефон, ведёт обратный..                                                                                                                                                                                                                
                        else begin qUD.Next; end;    //..отсчёт. когда он выберется (cnt станет 0), isparalleltel снова станет false (основным) и все переменные для параллельных снова..                                                                                                                                                                                                                    
     end;                                            //..возвращаются в начальные значения и затем опять идёт выбор параллельных телефонов. Это сложный способ, но проще, чтобы найти..                                                                                                                                                                                                                                                                                                                                                       
     Engine.ShowBand(pMSF); //..параллельные и вывести их сразу под основными, я придумать не смог. Если будете ругать его, то очень хорошо, но только после того как придумаете проще :):)                                                                                                                                                                                                                                                                                                                                                          
  end;
    
  if нп=1 then pMS.Visible:=False;           
end;

{*** П2 (pInet) ***}
procedure pInetOnBeforePrint(Sender: TfrxComponent);
begin Z.KeyValue:='0'; end;
procedure pInetOnManualBuild(Sender: TfrxComponent);
var svc_name : string;
    id_layer,cnt,i,p : Integer;                                                            
begin   
  нп:=0; тел_предыдущ:='';                                
  if selected_p2='по заявлению' then begin    
     i:=0;      
     while i<Length(arZp2) do begin
       Z.KeyValue:=arZp2[i];                                      //разовые услуги порта и предоставления доступа к интернет - поиск только по этим листам                                                                                                                                                                                                                                                                     
       {if нп=1 then }SetFilter('Листы заявления','ID_CELL_SVC IN (-101,-10101,-102,-10201) or SVC_ID=55552'); //-101, -10101, -11001,-11004,-11008,-11002,-102,-10201, -104,-10401,-11003)');
       qOL.First;   
       while not qOL.eof do begin                          
         if (тел_предыдущ<>тел) and (нп>0) then begin             //если новый телефон, то выводим данные прошлой записи, инициализируем переменные                                                                                                                                                                                                                                                                                                                                    
            Engine.ShowBand(mdInet);                                //мне кажется здесь ошибка, этот блок не выполнится никогда, ниже в конце написал почему и как исправить, если это                                                                                                                                                                                                                                                                                                                                                                                             
            технология_шпд:='';                                     //правда ошибка (тогда странно почему до сих пор не обращались).                                 
            зона_ответст_опер:='';                                  
            адрес_мпу:=''; 
            дата_начала:=''; 
            дата_конца:=''; 
            тарифный_план_шпд:=''; 
            ип_адрес:=''; 
            тех_нормы:=''; 
            вид_оборудования:=''; 
            наименование_оборудования:=''; 
            условия_предоставления:=''; 
            протокол_передачи:=''; 
            абонентский_интерфейс:=''; 
            шпд_логин:=''; 
            шпд_пароль:='';
         end;                    
         тел:=<Листы заявления."Номер устройства">;               //телефон                            
         if (<Содержание листа."Пост.ИД слоя">=-11001) or (<Содержание листа."Пост.ИД слоя">=-11002) or (<Содержание листа."Пост.ИД слоя">=-11004) or (<Содержание листа."Пост.ИД слоя">=-12000) then begin
            if (<Содержание листа."Пост.ИД слоя">=-11001) then begin технология_шпд:='xDSL'; вид_оборудования:='Модем'; end;
            if (<Содержание листа."Пост.ИД слоя">=-11002) then begin технология_шпд:='ETTH'; вид_оборудования:='Коммутатор'; end;
            if (<Содержание листа."Пост.ИД слоя">=-11002) then begin технология_шпд:='FTTx'; вид_оборудования:='Коммутатор'; end;
         
            адрес_мпу:=<Содержание листа."МПУ услуги">;
            дата_начала:=<Листы заявления."Начало действия">;
            if (дата_начала='30.12.1899') or (дата_начала='0') then дата_начала:='';              
         end;
         if (<Листы заявления."ИД слоя">=-102) or (<Листы заявления."ИД слоя">=-10201) then begin
            if Length(<Содержание листа."IP адрес">)<>0 then ип_адрес:=<Содержание листа."IP адрес">;  
            if (<Содержание листа."Пост.ИД услуги">)<>710113 then begin
               тарифный_план_шпд:=<Содержание листа."Пост.Наим.услуги">;
               шпд_логин:=<Содержание листа."Логин">;  
               шпд_пароль:=<Содержание листа."Пароль">;                             
               протокол_передачи:='TCP/IP';
            end;
            зона_ответст_опер:=<Содержание листа."Зона ответсвенности">;
              if trim(зона_ответст_опер)='' then зона_ответст_опер:=<Содержание заявления."Зона ответсвенности">;
              if trim(зона_ответст_опер)='' then зона_ответст_опер:=<Содержание заявления."Зона отв.действ.устр.">;  
         end;
         if length(технология_шпд)=0 then begin  //технология ШПД, если по слоям не получилось взять, берётся из имени ТП                                                                                                                                                                
            if (pos('DSL',uppercase(тарифный_план_шпд))<> 0) then begin технология_шпд:='xDSL'; вид_оборудования:='порт'; end;
            if (pos('TTH',uppercase(тарифный_план_шпд))<> 0) then begin технология_шпд:='ETTH'; вид_оборудования:='порт'; end;
            if (pos('PON',uppercase(тарифный_план_шпд))<> 0) then begin технология_шпд:='FTTx'; вид_оборудования:='порт'; end;
         end;               
         if (тел_предыдущ<>тел) then нп:=нп+1;   //если новый телефон, то нп - номер следующей строки, которую будем выводить. Так понимаю, листов может быть несколько для одного телефона.                                                                                                                                                                                                                                                                                                                                                                                                 
         тел_предыдущ:=тел;   //но вообще, по логике условие if вверху цикла не выполнится никогда, т.е. по-моему здесь ошибка.                   //а выводиться тел должен только один раз                                                                                                        
         qOL.Next;            //скорее всего тел_предыдущ:=тел; надо перенести в блок if вверху, где выводятся данные, и тогда всё будет правильно                                                                                                                                                                                                                                                                                        
       end;                   //но на всякий случай менять не стал, оставлю как есть, вдруг что-то не понял.        
       Engine.ShowBand(mdInet);           
       SetFilter('Листы заявления','');
       i:=i+1                     
     end;                 
     Engine.ShowBand(pInetF);    
  end;
    
  if selected_p2='по л/с' then begin                                                                                        
     SetFilter('Постоянные услуги абонента','CONST_SVC_ID_CELL_SVC=-12000');   //ограничиваем только ТП ШПД.                                                               
     cnt:=0;                     
     qPU.First;
     while not qPU.eof do begin
       cnt:=cnt+1;                                              
       SetLength(arr_inet_tp,cnt);
       arr_inet_tp[cnt-1]:=<Постоянные услуги абонента."Номер устройства">+'``'+<Постоянные услуги абонента."Наименование">; //все ТП ШПД и их телефоны на л/с абонента сохраняем в массив.                                                                                                                                                        
       qPU.Next;                                                                                                                                                      
     end;
     SetFilter('Постоянные услуги абонента','');                 
     SetFilter('Постоянные услуги абонента','COD=''105143''');  //услуг Предоставление статического ip-адреса                                                                                
     cnt:=0;                     
     qPU.First;
     while not qPU.eof do begin
       cnt:=cnt+1;                                              
       SetLength(arr_inet_ip,cnt);
       arr_inet_ip[cnt-1]:=<Постоянные услуги абонента."Номер устройства">; //сохраняет телефоны, для которых стат. ip-адрес есть                                                                                                                                                                      
       qPU.Next;
     end;
     SetFilter('Постоянные услуги абонента','');                 
     {if нп=1 then }SetFilter('Постоянные услуги абонента','CONST_SVC_ID_CELL_SVC IN (-11001,-11002,-11004,-11007, 11009)'); //теперь ищутся пост. слуги портов ШПД на л/с.                                                                                                   
     qPU.First;
     while not qPU.eof do begin
        тел:='';               
        технология_шпд:='';
        зона_ответст_опер:='';                                  
        адрес_мпу:=''; 
        дата_начала:=''; 
        дата_конца:=''; 
        тарифный_план_шпд:='';                                  
        ип_адрес:=''; 
        тех_нормы:=''; 
        вид_оборудования:=''; 
        наименование_оборудования:=''; 
        условия_предоставления:='';                        
        протокол_передачи:=''; 
        абонентский_интерфейс:=''; 
        шпд_логин:=''; 
        шпд_пароль:='';

        тел:=<Постоянные услуги абонента."Номер устройства">;  //берётся телефон                                                                    
        id_layer:=<Постоянные услуги абонента."ИД слоя">;      //по первым 3-м слоям технологию можно определить однозначно, там соответствующие услуги, а..                                                                                                                                                                                                                                                                          
        if (id_layer=-11001) then begin технология_шпд:='xDSL'; вид_оборудования:='модем'; end else
        if (id_layer=-11002) then begin технология_шпд:='ETTH'; вид_оборудования:='коммутатор'; end else
        if (id_layer=-11004) then begin технология_шпд:='GPON'; вид_оборудования:='модем'; end else
        if (id_layer=-11007) then begin                         //..в этом слое услуги вперемешку, поэтому технология берётся из имени услуги
           svc_name:=<Постоянные услуги абонента."Наименование">;
           if pos('xDSL',svc_name)>0 then begin технология_шпд:='xDSL'; вид_оборудования:='модем'; end else                                                                                                                 
           if pos('ADSL',svc_name)>0 then begin технология_шпд:='ADSL'; вид_оборудования:='модем'; end else  
           if pos('SHDSL',svc_name)>0 then begin технология_шпд:='SHDSL'; вид_оборудования:='модем'; end else  
           if pos('ETTH',svc_name)>0 then begin технология_шпд:='ETTH'; вид_оборудования:='коммутатор'; end else                                                                     
           if pos('GPON',svc_name)>0 then begin технология_шпд:='GPON'; вид_оборудования:='модем'; end else                                                                     
           if pos('Ethernet',svc_name)>0 then begin технология_шпд:='Ethernet'; вид_оборудования:=''; end;                                                                       
        end;
        адрес_мпу:=<Постоянные услуги абонента."МПУ.Адрес">;
        дата_начала:=<Постоянные услуги абонента."Начало действия">;
        if дата_начала='30.12.1899' then дата_начала:='';
        i:=0;                    
        while i<Length(arr_inet_tp) do begin   //если номер телефона есть в массиве ТП ШПД, то берём для его ТП                                                                                                                                   
          p:=pos('``',arr_inet_tp[i]);                                                               
          if тел=copy(arr_inet_tp[i],1,p-1) then begin тарифный_план_шпд:=copy(arr_inet_tp[i],p+2,Length(arr_inet_tp[i])-p+1); break end;                                                                                                 
          i:=i+1;                          
        end;                  
        i:=0;                    
        while i<Length(arr_inet_ip) do begin   //а здесь поиск есть ли для этого тел. стат. ip                                                                                                      
          if тел=arr_inet_ip[i] then ип_адрес:='ДА' else ип_адрес:='нет';                                                                                                                     
          i:=i+1;                          
        end;                  
        Engine.ShowBand(mdInet);
        нп:=нп+1;                                   
        qPU.Next;
     end;                                              
     Engine.ShowBand(pInetF);
     SetFilter('Постоянные услуги абонента','');           
  end;
    
  if нп=1 then pInet.Visible:=False;                                                                                            
end;


{**********************************************************************************************************************************}
{*** Процедура для подсчёта разбора (на рубли копейки) итоговых сумм с НДС и НДС для оборудования в собственность и в рассрочку ***}
{**********************************************************************************************************************************}
{*** подсчёт сумм и сохранение результата перед выводом договора купли-продажи ***}
//Суммы здесь сначала складываются, а потом округляются, чтобы сходились цифры с суммами в таблицах БД, иначе могут быть ошибки округления и небольшие расхождения
//суммы никогда не будут пустыми, т.к. в параметрах, там где выбирается оборудование для актов пустая сумма всегда заменятеся на 0.                                                                                                                                                                                                                                                                                                                            
procedure mdOSDogKP_1OnBeforePrint(Sender: TfrxComponent);
var sum,sum_bez_nds,sum_s_nds,sum_nds : Double;
    i,n : integer;
    s,s_rub,s_kop : string;                                     
begin    
  стоимость_с_НДС_руб:=''; стоимость_с_НДС_коп:=''; стоимость_с_НДС_прописью_руб:=''; в_тч_НДС_руб:=''; в_тч_НДС_коп:=''; в_тч_НДС_прописью_руб:='';
  sum:=0; sum_bez_nds:=0; sum_s_nds:=0; sum_nds:=0;              
  i:=0;
  while i<Length(arSobst) do begin
    s:=arSobst[i]; delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); s:=trim(Copy(s,1,pos('|',s)-1));
    n:=pos(',',s); if n>0 then s:=Copy(s,1,n-1)+'.'+Copy(s,n+1,2);  //s - сумма, ',' если есть, заменяется на '.'                                                                                                             
    sum:=StrToFloat(s);
    sum_s_nds:=sum_s_nds+sum;           //суммы с ндс и ндс накапливаются, а без ндс здесь нужна только для рассчётов, в этой части договора не выводится.                                                                                                                                                                                                                                                       
    sum_bez_nds:=sum/1.18;                                    
    sum_nds:=sum_nds+(sum-sum_bez_nds);                                                                        
    i:=i+1;
  end;            
  i:=0;
  while i<Length(arSobstR) do begin  //отличается только удалением ещё и заявления, вначале строки (т.к. в массиве рассрочки хранится строка оборудования и ещё заявление с листом)                                                                                                                                                                                                                                                                                                                                     
    s:=arSobstR[i]; delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); delete(s,1,pos('|',s)); s:=trim(Copy(s,1,pos('|',s)-1));
    n:=pos(',',s); if n>0 then s:=Copy(s,1,n-1)+'.'+Copy(s,n+1,2);
    sum:=StrToFloat(s);
    sum_s_nds:=sum_s_nds+sum;
    sum_bez_nds:=sum/1.18;                                  
    sum_nds:=sum_nds+(sum-sum_bez_nds);                                                                        
    i:=i+1;
  end;
  s:=FormatFloat('#.##',sum_s_nds);        //FormatFloat отсекает лишние нули, если после точки одни нули, то отсекает всю десятичную часть вместе с точкой, и округляет до кол-ва #-ок.                                                                                                                                                                                                                                                                                                  
  n:=pos('.',s); if n=0 then begin s_rub:= s; s_kop:='00'; end else begin s_rub:=Copy(s,1,n-1); s_kop:=Copy(s,n+1,2); if Length(s_kop)=1 then s_kop:=s_kop+'0'; end;
  стоимость_с_НДС_руб:=s_rub; стоимость_с_НДС_коп:=s_kop; стоимость_с_НДС_прописью_руб:=CntToStr(StrToInt(s_rub));
  s:=FormatFloat('#.##',sum_nds);          //FormatFloat отсекает лишние нули, если после точки одни нули, то отсекает всю десятичную часть вместе с точкой, и округляет до кол-ва #-ок.                                                                                                                                                                                                                                                                                                  
  n:=pos('.',s); if n=0 then begin s_rub:= s; s_kop:='00'; end else begin s_rub:=Copy(s,1,n-1); s_kop:=Copy(s,n+1,2); if Length(s_kop)=1 then s_kop:=s_kop+'0'; end;           
  в_тч_НДС_руб:=s_rub; в_тч_НДС_коп:=s_kop; в_тч_НДС_прописью_руб:=CntToStr(StrToInt(s_rub)); 
end;

{*************************************************************************************}
{*** Процедура инициализации и вывода данных по оборудованию и сумм для всех актов ***}
{*************************************************************************************}
//инициализация                                
procedure initforakts();                                                                                                                    
begin итого_с_НДС:='0'; итого_без_НДС:='0'; итого_НДС:='0'; итого_ежемес:='0'; итого_колво:='0'; k:=0; end; //итого_ежемес используется только в акте п/п на аренду                            
//сама процедура вывода данных и сумм и подсчёта итогов                                                                                                                                                                  
procedure dataforakts(p_ar : array of string; p_akt : String); //общий алгоритм одинаковый для всех актов.                                                                                                                                                                                                                                                                                                                                                                                                                                    
var str,s : String;
    n : integer;                                                  
    sum,sum_bez_nds,sum_nds : Double;    
begin 
  if k<Length(p_ar) then begin                                                                            
  сумма_с_НДС:='0'; сумма_НДС:='0'; сумма_без_НДС:='0'; if p_akt='A' then ежемес_с_НДС:='0';   //для каждой новой записи суммы инициализируются                                                                                                                                            
  str:=p_ar[k];                                                                                //Данные по оборудованию берутся из соотв. акту массива                                                                                                                                                               
  if (p_akt='R') or (p_akt='T') then begin n:=Pos('|',str); {заявление/лист - пропускаем} delete(str,1,n); end; //для рассрочки заявление/лист, для Торг12 просто заявление                                                                                                                                               
  n:=Pos('|',str); сер_номер:=trim(Copy(str,1,n-1)); delete(str,1,n);                            //разбираются по полям                                                                                                                                                                        
  n:=Pos('|',str); модель:=trim(Copy(str,1,n-1));    delete(str,1,n); 
  n:=Pos('|',str); вид_обр:=trim(Copy(str,1,n-1));   delete(str,1,n);
  case p_akt of                                                                                  //и в зависимости от акта включаются свои MasterData с комплектацией (здесь разделение                                                                                                                                                                                                                                                                                                                                                            
    'A': case вид_обр of  //для аренды с комплектацией                                           //по актам в основном из-за них)                                                                        
           'M': begin вид_обр:='Модем:';       mdMdm.Visible:=true;     end;           
           'O': begin вид_обр:='ONT модем:';   mdONT.Visible:=true;     end;  
           'S': begin вид_обр:='STB:';         mdSTB.Visible:=true; if chbKKabel.checked then mdSTBKabel.Visible:=true; if chbKScart.checked then mdSTBScart.Visible:=true; if chbKElPitPult.checked then mdSTBElPitPult.Visible:=true; end;         
           'K': begin вид_обр:='Коммутатор:';  mdKmt.Visible:=true;     end;  
           'B': begin вид_обр:='Видеосендер:'; mdVidsend.Visible:=true; end;                                 
           else вид_обр:='';                                    
         end;  
    'AU': case вид_обр of //для аренды выводится ещё и комплектация - это аренда в рамках услуг
            'M': begin вид_обр:='Модем:';       mdAUMdm.Visible:=true;     end;           
            'O': begin вид_обр:='ONT модем:';   mdAUONT.Visible:=true;     end;  
            'S': begin вид_обр:='STB:';         mdAUSTB.Visible:=true; if chbKKabel.checked then mdAUSTBKabel.Visible:=true; if chbKScart.checked then mdAUSTBScart.Visible:=true; if chbKElPitPult.checked then mdAUSTBElPitPult.Visible:=true; end;         
            'K': begin вид_обр:='Коммутатор:';  mdAUKmt.Visible:=true;     end;  
            'B': begin вид_обр:='Видеосендер:'; mdAUVidsend.Visible:=true; end;                                 
            else вид_обр:='';                                    
          end;  
    else case вид_обр of      //для всех остальных
           'M': вид_обр:='Модем:';
           'O': вид_обр:='ONT модем:';
           'S': вид_обр:='STB:';       
           'K': вид_обр:='Коммутатор:';
           'B': вид_обр:='Видеосендер:';                               
           else вид_обр:='';                                    
         end;
  end;                   
  n:=Pos('|',str); БУ:=trim(Copy(str,1,n-1));        delete(str,1,n); 
  n:=Pos('|',str); {это акт, он не нужен}            delete(str,1,n); 
  n:=Pos('|',str); sum:=StrToFloat(trim(Copy(str,1,n-1)));                    //ещё для аренды выводится ежемесячный платёж с итогами по нему.                                                                                                                                           
  if p_akt='A' then begin delete(str,1,n); ежемес_с_НДС:=trim(Copy(str,1,n-1)); итого_ежемес:=FormatFloat('#.##',StrToFloat(итого_ежемес)+StrToFloat(ежемес_с_НДС)) end;
  sum_bez_nds:=sum/1.18;                                  
  sum_nds:=sum-sum_bez_nds;
  сумма_с_НДС:=FormatFloat('#.##',sum);
  сумма_НДС:=FormatFloat('#.##',sum_nds);            
  сумма_без_НДС:=FormatFloat('#.##',sum_bez_nds);
  итого_колво:=IntToStr(StrToInt(итого_колво)+1);                  
  итого_с_НДС:=FormatFloat('#.##',StrToFloat(итого_с_НДС)+sum);
  итого_НДС:=FormatFloat('#.##',StrToFloat(итого_НДС)+sum_nds);                      
  итого_без_НДС:=FormatFloat('#.##',StrToFloat(итого_без_НДС)+sum_bez_nds);
  k:=k+1;                  
  if p_akt='T' then begin t12np:=IntToStr(StrToInt(t12np)+1); end;            //для Торг-12 - номер п/п                                                             
  end else begin   //по какой причине "k" может превзойти кол-во строк в массиве я забыл, но кажется это как-то связано с Торг-12. Скорее всего потому, что в Торг может быть только..                                                                                                                                                                                                                                                                                                                                                                                                                                                         
     if p_akt='T' then begin t12np:=''; t12_kolvo:=''; вид_обр:=''; сер_номер:=''; модель:=''; t12_nds_percent:=''; сумма_с_НДС:=''; сумма_НДС:=''; сумма_без_НДС:=''; end; //.. 3 позиции      
  end;               //а когда формируется массив, то в него берётся всё оборудование, назначенное для Торг-12, его может быть больше чем 3.                                                                                                                                                                                                                                                                                                                  
end;
  
{***************************************************************************************}
{*** вывод данных о реализуемом оборудовании без рассрочки - в договор купли-продажи ***}
{***************************************************************************************}
procedure mdOS_hOnBeforePrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure mOSDogKP_snOnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arSobst,'DKP'); end;  //договор купли-продажи и данные из массива для него, остальные подобные процедуры по тому же принципу.                                                                                                                                                                                                                                   

{*******************************}
{*** вывод графика рассрочки ***}
{*******************************}
{*** сначала устанавливаются значения накручиваемых переменных для авт. рассчёта расположения бэндов и вызывается процедура вывода самого графика ***}                                                                                                                                                                                                                                                                                                                                                                                                                                                             
procedure mdOSDogKP_1OnAfterPrint(Sender: TfrxComponent); //если только оборудование только в рассрочку то позиция начала вывода графика отсчитывается от первого дата-бэнда, т.к. бэнды                                                                                                                                                                                                                 
begin if (isSobstR) and (isSobstNotR=false) then begin rtop:=mdOSDogKP_1.Top+mdOSDogKP_1.Height+5; OutputR; end; end;  //с оборудованием не в рассрочку не выводятся и mdOR_txt не будет.                                                                                                                                                                                 
procedure mdOR_txtOnAfterPrint(Sender: TfrxComponent);    //а если оборудование не в рассрочку есть, то эта процедура сработает и начало вывода графика будет считаться от mdOR_txt.                                                                                                                                                                                                                                                                                             
begin rtop:=mdOR_txt.Top+mdOR_txt.Height+5; OutputR; end;
{*** процедура вывода графика со всем хозяйством к нему ***}
//хозяйство - это оборудование соответствующее выводимому графику
//здесь все бэнды и поля - все графики расрочки, оборудования к ним - создаются и добавляются из кода, расставляются отступы, расположение.                                                                                                                                                                                                                                                                                                                                                                                                                                      
procedure OutputR();
var z,s : String;
    i,j,jj,n : integer;
    l,grtop : Double;                                  
    md : tFrxMasterData;  //MasterData                                                                  
    mv : tFrxMemoView;    //MemoView                                                                                    
begin                                     
  md:=TfrxMasterData.Create(pDogKupProd); md.Name:='mdSpace1'+IntToStr(i); md.RowCount:=1; md.top:=rtop; md.Height:=5; md.left:=0; md.width:=pDogKupProd.PaperWidth; md.stretched:=true;
  mv:=tFrxMemoView.Create(md); mv.Name:='mvSpace1'+IntToStr(i); mv.Top:=0; mv.Height:=5; mv.Left:=l; mv.Width:=720;          
  Engine.ShowBand(md); //когда содержимое бэнда готово, проявляем бэнд.
  rtop:=rtop+md.Height+5; //запоминаем позицию следующего бэнда                                                                 
  i:=0;
  while i<Length(arSobstR) do begin  //для всех графиков                                                            
      //вывод пустого бэнда - пробела
      if i>0 then begin                                             
         md:=TfrxMasterData.Create(pDogKupProd); md.Name:='mdSpace1'+IntToStr(i); md.RowCount:=1; md.top:=rtop; md.Height:=20; md.left:=0; md.width:=pDogKupProd.PaperWidth; md.stretched:=true;
         mv:=tFrxMemoView.Create(md); mv.Name:='mvSpace1'+IntToStr(i); mv.Top:=0; mv.Height:=20; mv.Left:=l; mv.Width:=720;          
         Engine.ShowBand(md); //когда содержимое бэнда готово, проявляем бэнд.
         rtop:=rtop+md.Height+5; //запоминаем позицию следующего бэнда
       end;                   
      //вывод заголовка для строки оборудования
      md:=TfrxMasterData.Create(pDogKupProd); md.Name:='mdO'+IntToStr(i); md.RowCount:=1; md.top:=rtop; md.Height:=53; md.left:=0; md.width:=pDogKupProd.PaperWidth; md.stretched:=true; md.Font.Name:='Times New Roman'; md.Font.Size:=10;
      j:=0; l:=0;  //здесь нужно вывести 6 колонок, почти все параметры постоянные, меняется только левая позиция, длина и текст, Left для каждого столбца пересчитывается.                                                                                                                                                                                                                                                                                                                                                                                                                   
      while j<6 do begin      //это шапка таблицы                                                
        mv:=tFrxMemoView.Create(md); mv.Name:='mvHO'+IntToStr(i)+IntToStr(j); mv.Top:=0; mv.Height:=35; mv.Left:=l; mv.Frame.Typ:=15; mv.ParentFont:=true; mv.HAlign:=haCenter; mv.VAlign:=vaCenter;          
        case j of 
         0: begin mv.Width:=260; mv.Text:='Наименование и модель Оборудования'; end;    
         1: begin mv.Width:=196; mv.Text:='Серийный номер'; end;         
         2: begin mv.Width:=72;  mv.Text:='Новое'+Chr(10)+'/БУ'; end;    
         3: begin mv.Width:=72;  mv.Text:='Стоимость'+Chr(10)+'руб. с НДС'; end;      
         4: begin mv.Width:=52;  mv.Text:='НДС'; end;      
         5: begin mv.Width:=68;  mv.Text:='Стоимость'+Chr(10)+'руб. без НДС'; end;                 
        end;
        l:=l+mv.Width;                      
        j:=j+1;
      end;
      s:=arSobstR[i];  //берутся данные по ооборудованию из массива - текущее оборудование, строка, которая, разбирается по полям, высчитываются суммы                                                                                                                                                                                                                                                                                             
      n:=pos('|',s); z:=Copy(s,1,n-1);               delete(s,1,n);   //заявление/лист (используется чтобы отфильтровать нужный график рассрочки)                                                                                                                                     
      n:=Pos('|',s); сер_номер:=trim(Copy(s,1,n-1)); delete(s,1,n);
      n:=Pos('|',s); модель:=trim(Copy(s,1,n-1));    delete(s,1,n); 
      n:=Pos('|',s); вид_обр:=trim(Copy(s,1,n-1));   delete(s,1,n);
      case вид_обр of 
        'M': вид_обр:='Модем:';
        'O': вид_обр:='ONT модем:';
        'S': вид_обр:='STB:';       
        'K': вид_обр:='Коммутатор:';
        'B': вид_обр:='Видеосендер:';                               
        else вид_обр:='';                                    
      end;
      n:=Pos('|',s); БУ:=trim(Copy(s,1,n-1));        delete(s,1,n); 
      n:=Pos('|',s); {это акт, он не нужен}          delete(s,1,n); 
      n:=Pos('|',s); сумма_с_НДС:=trim(Copy(s,1,n-1));
      сумма_без_НДС:=FormatFloat('#.##',StrToFloat(сумма_с_НДС)/1.18);                                  
      сумма_НДС:=FormatFloat('#.##',StrToFloat(сумма_с_НДС)-StrToFloat(сумма_без_НДС));
      j:=0; l:=0;      //а потом выводятся сами поля так же как выше, все данные для них уже готовы, Left для каждого пересчитывается, выравнивание и заполняется значением.                                                                                                                                                                                                                                                                                                                                           
      while j<6 do begin
        mv:=tFrxMemoView.Create(md); mv.Name:='mvO'+IntToStr(i)+IntToStr(j); mv.Top:=35; mv.Height:=18; mv.Left:=l; mv.Frame.Typ:=15; mv.ParentFont:=true; mv.VAlign:=vaCenter;
        case j of 
         0: begin mv.Width:=260; mv.HAlign:=haLeft;   mv.Text:=вид_обр+' - '+модель; end;    
         1: begin mv.Width:=196; mv.HAlign:=haLeft;   mv.Text:=сер_номер; end;         
         2: begin mv.Width:=72;  mv.HAlign:=haCenter; mv.Text:=БУ; end;    
         3: begin mv.Width:=72;  mv.HAlign:=haRight;  mv.Text:=сумма_с_НДС; end;      
         4: begin mv.Width:=52;  mv.HAlign:=haRight;  mv.Text:=сумма_НДС; end;      
         5: begin mv.Width:=68;  mv.HAlign:=haRight;  mv.Text:=сумма_без_НДС; end;                 
        end;
        l:=l+mv.Width;                      
        j:=j+1;
      end;
      Engine.ShowBand(md); //когда содержимое бэнда готово, проявляем бэнд.
      rtop:=rtop+md.Height+5; //запоминаем позицию следующего бэнда                                                                                                                                                                                            
      //далее вывод самого графика рассрочки. Он будет так же весь в одном бэнде. Сначала "шапка", потом все поля графика. Но сперва надо пробежаться по графику в базе, чтобы посчитать
      //кол-во полей, чтобы оценить размер графика и соответственно размер бэнда.                                                                                                                                                                                  
      setfilter('Рассрочка','STNUM='''+z+''' and ISACTIV=''Y'' and instl_vid<>''Д'''); //этот график для оборудования, выведенного выше, ищется по его заявлению/листу                                                                                                                                                        
      n:=0; qRGP.First; while not qRGP.eof do begin n:=n+1; qRGP.Next; end; //n - колво строк в графике платежей (рассрочки), чтобы правильно определить размер бэнда                                                                                                                                                                                                                                                                               
      if (n=6) or (n=12) or (n=24) or (n=36) then begin //только для известных графиков рассрочки (на 6,12,24,36 месяцев), для неизвестных график просто не выведется и выйдет сообщение.                                                                                                                                                                                                                                                                                                                                                                                     
         //создаём пустой бэнд - отступ              
         md:=TfrxMasterData.Create(pDogKupProd); md.Name:='mdSpace'+IntToStr(i); md.RowCount:=1; md.top:=rtop; md.Height:=20; md.left:=0; md.width:=pDogKupProd.PaperWidth; md.stretched:=true;
         mv:=tFrxMemoView.Create(md); mv.Name:='mvSpace'+IntToStr(i); mv.Top:=0; mv.Height:=20; mv.Left:=l; mv.Width:=720;          
         Engine.ShowBand(md); //когда содержимое бэнда готово, проявляем бэнд.
         rtop:=rtop+md.Height+5; //запоминаем позицию следующего бэнда
         //потом бэнд для графика рассрочки                                                                                     
         md:=TfrxMasterData.Create(pDogKupProd); md.Name:='mdGR'+IntToStr(i); md.RowCount:=1; md.top:=rtop;       //создаём бэнд
         case n of 6: md.Height:=112; 12: md.Height:=144; 24: md.Height:=208; 36: md.Height:=272; end;            //его будущая высота.                                                                                                                      
         md.left:=0; md.width:=pDogKupProd.PaperWidth; md.stretched:=true; md.Font.Name:='Times New Roman'; md.Font.Size:=10;
         j:=1; jj:=1; l:=0;  //тут нужно вывести 9 колонок заголовка, почти все параметры постоянные, меняется только левая позиция, длина и текст, Left для каждого столбца пересчитывается.                                                                                                                                                                                                                                                                                                                                                                                                                   
         while j<=9 do begin   //девять - потому что таблица с графиком - в 3 столбца, их влезает 3 штуки на ширину страницы - для удобства, красоты и экономии бумаги.                                                                                                                                                                                                                                                                                                                                                                                                                                 
           mv:=tFrxMemoView.Create(md); mv.Name:='mvHGR'+IntToStr(i)+IntToStr(j); mv.Top:=0; mv.Height:=64; mv.Left:=l; mv.Frame.Typ:=15; mv.ParentFont:=true; mv.HAlign:=haCenter; mv.VAlign:=vaCenter;          
           case jj of        //т.к. эти три колонки 3 раза повторяются.                                                                                                     
            1: begin mv.Width:=48;  mv.Text:='Поряд'+Chr(10)+'ковый'+Chr(10)+'номер'+Chr(10)+'месяца'; end;    
            2: begin mv.Width:=112; mv.Text:='Срок оплаты до'; end;    
            3: begin mv.Width:=80;  mv.Text:='Руб. с НДС'; end;         
           end;
           if jj=3 then jj:=1 else jj:=jj+1;  //за повторный вывод отвечает это место                                                                                                                                                                                                                                
           l:=l+mv.Width;
           j:=j+1;                            //а это просто счётчик всех столбцов                                                                                        
         end;
         grtop:=mv.Height;                    //высота в пределах бэнда (графика рассрочки)   //далее вывод первоначального взноса                                                                                                                                                                                                         
         mv:=tFrxMemoView.Create(md); mv.Name:='mvPV'+IntToStr(i); mv.Top:=64; mv.Height:=16; mv.Left:=0; mv.Width:=720; mv.Frame.Typ:=15; mv.ParentFont:=true; mv.HAlign:=haLeft; mv.VAlign:=vaCenter; mv.Text:='Первоначальный взнос:   '+DateToStr(<Первоначальный взнос."Дата платежа ">)+'   '+FloatToStr(<Первоначальный взнос."Сумма платежа">);
         grtop:=grtop+mv.Height;              //его высота тоже добавляется                                                                                              
         qRGP.First;                          //теперь вывод самого графика платежей                                                                                 
         j:=1; l:=0; s:=''; //здесь нужно вывести 6 колонок, почти все параметры постоянные, меняется только левая позиция, длина и текст, Left для каждого столбца пересчитывается.
         while not qRGP.eof do begin          //для каждой строки графика платежей                                                                                     
           jj:=1;  
           while jj<=3 do begin                //нужно вывести 3 колонки, и далее в цикле они выводятся:
             mv:=tFrxMemoView.Create(md); mv.Name:='mvGR'+IntToStr(i)+IntToStr(j)+IntToStr(jj); mv.Top:=grtop; mv.Height:=16; mv.Left:=l; mv.Frame.Typ:=15; mv.ParentFont:=true; mv.VAlign:=vaCenter;
             case jj of
              1: begin mv.Width:=48;  mv.HAlign:=haRight; mv.Text:=<График платежей."Номер">; end;    
              2: begin mv.Width:=112; mv.HAlign:=haCenter; mv.Text:=<График платежей."Дата платежа ">; end;    
              3: begin mv.Width:=80;  mv.HAlign:=haRight;  mv.Text:=<График платежей."Сумма платежа">; end;         
             end;                                                                                                                                                                                                              
             //n/3 - это кол-во строк в графике (т.к. он имеет три колонки, то весь набор строк распределяется по этим 3-м колонкам).
             //trunc(j/(n/3)) - указывает на текущую колонку, на её последнюю строку. Т.к. j всегда больше значения (n/3)*trunc(j/(n/3)) пока не дойдёт до последней строки и она полностью
             //не будет выведена. В этот момент эти значения сравняются и будет высчитана позиция по вертикале и горизонтали для следующей позиции графика.                                                                                                                                                                                                                                                                                                                                                                                                          
             l:=l+mv.Width;                    
             if jj=3 then begin                                                //строка набора выведенна полностью                                                                                                      
                if j=(n/3)*trunc(j/(n/3)) then begin                           //она - последняя строка колонки                                                          
                   grtop:=grtop-mv.Height*(n/3-1);                             //возвращаем на исходную по вертикале (после вывода последней строки в текущ. колонке top не увеличивается                                                                                                                                                                                                                                             
                   s:='конец колонки, нужен переход на следующую';                         //поэтому вычитать для возврата на исходную нужно тоже на одну строку меньше)                                                                                                                                                                                                                                                                  
                end else begin grtop:=grtop+mv.Height; s:=''; end;             //
                if s='' then l:=l-240;                                         //если не последняя строка в колонке - left возвращается на начальную, если последняя, для следующей данное                                                                                                                                                                                                                                                         
             end;                                                                                                                                        //значение left и будет начальным.                                                                                                                                                                                                                                                                                                                                                                                               
             jj:=jj+1;
           end;
           j:=j+1;   
           qRGP.Next;
         end;
         rtop:=rtop+md.Height+5;
         Engine.ShowBand(md); //когда содержимое бэнда готово, проявляем бэнд.
      end else showmessage('Извините.'+Chr(10)+'я умею выводить графики рассрочек только на 6, 12, 24, 36 месяцев.'+Chr(10)+'Если у вас другой график, обратитесь к дуболому, который меня разработал (и не учёл ваш случай).'+Chr(10)+Chr(10)+'(/*с уважением, программа*/)');
      i:=i+1;
  end;
end;

{********************************************************************}
{*** вывод Акта п/п с оборудованием без рассрочки и в рассрочку ***}
{********************************************************************}
{*** вывод Акта п/п с оборудованием без рассрочки и в рассрочку ***}                                      
//без рассрочки
procedure ReportTitle4OnAfterPrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure mAktppSOnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arSobst,'S'); end;
//в рассрочку                                                                                                                                                                                                                                                                                                                                                                                                                                      
procedure MasterData6OnBeforePrint(Sender: TfrxComponent);
begin k:=0; end;
procedure mAktppROnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arSobstR,'R'); end;
{*** вывод ДС и Акта п/п в аренду с оборудованием и комплектацией ***}
procedure mdKSTBOnBeforePrint(Sender: TfrxComponent);
begin nKSTB:=5; end;
procedure mdKSTBPosOnBeforePrint(Sender: TfrxComponent);
begin nKSTB:=nKSTB+1; end;
procedure ReportTitle5OnAfterPrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure mAktppAOnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arArenda,'A'); end;
{*** вывод для акта п/п на выкуп оборудования из аренды ***}
procedure MasterData7OnAfterPrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure Memo96OnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arVikup,'V'); end;
//вывод сумм                             
procedure MasterData11OnBeforePrint(Sender: TfrxComponent);
var sum_bez_nds,sum_s_nds,sum_nds : Double;
    n : integer;
    s,s_rub,s_kop : string;                                     
begin
  if eVSum.Enabled then begin                                                                              
     стоимость_с_НДС_руб:=''; стоимость_с_НДС_коп:=''; стоимость_с_НДС_прописью_руб:=''; в_тч_НДС_руб:=''; в_тч_НДС_коп:=''; в_тч_НДС_прописью_руб:='';
     if trim(eVSum.Text)='' then sum_s_nds:=0 else sum_s_nds:=StrToFloat(eVSum.Text);
     sum_bez_nds:=sum_s_nds/1.18;                                    
     sum_nds:=sum_s_nds-sum_bez_nds;                                                                        
     s:=FormatFloat('#.##',sum_s_nds);        //FormatFloat отсекает лишние нули, если после точки одни нули, то отсекает всю десятичную часть вместе с точкой, и округляет до кол-ва #-ок.                                                                                                                                                                                                                                                                                                  
     n:=pos('.',s); if n=0 then begin s_rub:=s; s_kop:='00'; end else begin s_rub:=Copy(s,1,n-1); s_kop:=Copy(s,n+1,2); if Length(s_kop)=1 then s_kop:=s_kop+'0'; end;
     стоимость_с_НДС_руб:=s_rub; стоимость_с_НДС_коп:=s_kop; стоимость_с_НДС_прописью_руб:=CntToStr(StrToInt(s_rub));
     s:=FormatFloat('#.##',sum_nds);          //FormatFloat отсекает лишние нули, если после точки одни нули, то отсекает всю десятичную часть вместе с точкой, и округляет до кол-ва #-ок.                                                                                                                                                                                                                                                                                                  
     n:=pos('.',s); if n=0 then begin s_rub:=s; s_kop:='00'; end else begin s_rub:=Copy(s,1,n-1); s_kop:=Copy(s,n+1,2); if Length(s_kop)=1 then s_kop:=s_kop+'0'; end;           
     в_тч_НДС_руб:=s_rub; в_тч_НДС_коп:=s_kop; в_тч_НДС_прописью_руб:=CntToStr(StrToInt(s_rub));
  end;               
end;
{*** вывод для акта п/п на возврат оборудования ***}
procedure ReportTitle8OnAfterPrint(Sender: TfrxComponent);
begin k:=0; end;
procedure Memo173OnBeforePrint(Sender: TfrxComponent);
var str : String;
    n : integer;                                                  
    sum,sum_bez_nds,sum_nds : Double;    
begin                                               
  str:=arVozvrat[k];                                        
  n:=Pos('|',str); сер_номер:=trim(Copy(str,1,n-1)); delete(str,1,n);                                                                                                                          
  n:=Pos('|',str); модель:=trim(Copy(str,1,n-1));    delete(str,1,n); 
  n:=Pos('|',str); вид_обр:=trim(Copy(str,1,n-1));
  case вид_обр of 
    'M': begin вид_обр:='Модем:';       mdVZMdm.Visible:=true;     end;           
    'O': begin вид_обр:='ONT модем:';   mdVZONT.Visible:=true;     end;  
    'S': begin вид_обр:='STB:';         mdVZSTB.Visible:=true;     end;         
    'K': begin вид_обр:='Коммутатор:';  mdVZKmt.Visible:=true;     end;  
    'B': begin вид_обр:='Видеосендер:'; mdVZVidsend.Visible:=true; end;                                 
    else вид_обр:='';                                    
  end;
  k:=k+1;                  
end;
{*** вывод для акта п/п в аренду в рамках услуг ***}
procedure mdAUKSTBOnBeforePrint(Sender: TfrxComponent);
begin nKSTB:=5; end;
procedure mdAUKSTBPosOnBeforePrint(Sender: TfrxComponent);
begin nKSTB:=nKSTB+1; end;
procedure ReportTitle10OnAfterPrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure Memo672OnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arArendaUsl,'AU'); end;
{*** вывод для акта п/п в собственность в рамках услуг ***}
procedure ReportTitle9OnAfterPrint(Sender: TfrxComponent);
begin initforakts(); end;
procedure Memo618OnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arSobstUsl,'SU'); end;
{*********************************************************}
{*** Вывод оборудования из списка оборудований Торг-12 ***}
{*********************************************************}
procedure pTorg12OnBeforePrint(Sender: TfrxComponent);
begin initforakts(); t12np:='0'; t12_kolvo:='1'; t12_nds_percent:='18'; end;
procedure dpTorgOnActivate(Sender: TfrxComponent);
begin eT.Text:=''; end;
//заполняется номер документа                                                            
procedure MasterData37OnBeforePrint(Sender: TfrxComponent);
var i,n : Integer;
    s : String;                                            
begin
  t12_numdoc:='';              
  i:=0;
  while (i<Length(arSobstT12)) do begin
    s:=arSobstT12[i];                        
    n:=Pos('|',s); s:=trim(Copy(s,1,n-1)); 
    if (s<>'') and (Pos(s,t12_numdoc)=0) then begin
       t12_numdoc:=t12_numdoc+', '+s;           
    end;
    i:=i+1;                    
  end;
  if t12_numdoc<>'' then delete(t12_numdoc,1,2);                                                                                      
end;
//заполняется Торг-12 и заодно показываются нужные комплектации                                                                                                                                                                         
procedure mdT12_1OnBeforePrint(Sender: TfrxComponent);
begin dataforakts(arSobstT12,'T'); end;
  
{***********************************************}
{*** вывод приложений с выбором из заявлений ***}
{***********************************************}
{*** Акт выполненных работ ***}
procedure rtOnAfterPrint(Sender: TfrxComponent);
begin
  Z.KeyValue:='0';            
  сумма_работ:=0; номер_пп:=0;           
end;
procedure pAktVipRabOnManualBuild(Sender: TfrxComponent);
var i : Integer;
begin
   Engine.ShowBand(rt);
      i:=0;
      while i<clbZAktVRab.Items.Count do begin
            if clbZAktVRab.checked(i) then begin
               Z.KeyValue:=clbZAktVRab.Items.Strings[i];                                                                                                               
               дата_выполнения_работ:=iif(StrToInt(Copy(DateToStr(<Содержание заявления."Дата установки">),7,4))<1990,DateToStr(<Содержание заявления."Дата создания заявления">),DateToStr(<Содержание заявления."Дата установки">));  
               qOL.First;
               while not qOL.eof do begin
                     номер_пп:=номер_пп+1;                   
                     наимен_раз_услуги:=<Листы заявления."Раз.услуга Наименование">;                            
                     МПУ_услуги:=<Содержание листа."МПУ услуги">;
                     номер_устройства:=<Листы заявления."Номер устройства">;
                     сумма_работ:=сумма_работ+<Содержание листа."Сумма">; 
                     Engine.ShowBand(md);
                     qOL.Next;
               end;
            end;
            i:=i+1;                                          
      end;
   сумма_работ_на_сумму:=FloatToStr(сумма_работ/100);                                                         
   сумма_работ_в_тч_НДС:=FloatToStr(ROUND(сумма_работ/118*18*)/100);                                  
   Engine.ShowBand(f);
   Engine.ShowBand(ff);
end;
//процедура выбора оборудования в гарантийный талон и рег карту                                                                                                                                                      
procedure oborudovanieSHPD1(obj: String);
var str : String;
    i,c : Integer;                                              
begin            
  i:=0; c:=0;          
  while i<Length(arGSRC) do begin
    Z.KeyValue:=arGSRC[i];                                                           
    //SetFilter('Листы заявления','svc_code in ('+codi_realiz+','+codi_arendi+')');   //выборку нарядов ограничил только услугами реализации и аренды теми, где может быть оборудование STB
    qOL.First;
    while not qOL.eof do begin                                      //перебераем все листы                                                                                                                                                                                                            
       str:=trim(<Содержание листа."Примечание">);                  //берём всю строку доп. инфо.                                                                                                                                          
       if (pos('GEN3',str)>0) then begin                            //если в ней есть STB
          оборудование_тв:=get_modem(str);         
          серийный_номер_тв_оборудования:=get_sn(str);                      
          if (selected_garantsogl) and (selected_regcard) then begin
             c:=c+1; setLength(arSTBRC,c); arSTBRC[c-1]:=оборудование_тв+'`'+серийный_номер_тв_оборудования+'`'+trim(<Содержание листа."Пост.Наим.услуги">);                                                  
          end else 
          if (selected_regcard) then тариф_план_тв:=<Содержание листа."Пост.Наим.услуги">;    
          if obj='pRegCardIPTV' then begin Engine.ShowBand(mdIPTV2); end else  //в зависимости от страницы выводится соответствующий бэнд                                                                                                                                                              
          if obj='pGarant' then Engine.ShowBand(mdG2);
       end;
       if (selected_regcard) then begin
          if <Листы заявления."Раз.услуга Код">='80402' then
             if Length(<Содержание листа."Пароль">)<>0 then логин_пароль_tv:=логин_пароль_tv+' , '+<Содержание листа."Логин">+' / '+<Содержание листа."Пароль">
                                                       else логин_пароль_tv:=логин_пароль_tv+' , '+<Содержание листа."Логин">+' / '+'               ';
       end;                               
       qOL.Next;
    end;
    qOL.First;
    //SetFilter('Листы заявления','');
    i:=i+1;
  end;              
end;
{*** Гарантийный талон ***}
procedure pGarantOnBeforePrint(Sender: TfrxComponent);
begin
  оборудование_тв:='';                      
  серийный_номер_тв_оборудования:=''; 
  тариф_план_тв:='';
  логин_пароль_tv:='';          
end;
procedure pGarantOnManualBuild(Sender: TfrxComponent);
begin
  Engine.ShowBand(mdG1);
  {if chbCleanBlank.checked=false then begin} oborudovanieSHPD1(sender.name); //end else begin Engine.ShowBand(mdG2_clean); end;                                     
  Engine.ShowBand(mdG3);
  Engine.ShowBand(mdG4);
end;
{*** Регистрационная карта IP-TV ***}
procedure pRegCardIPTVOnBeforePrint(Sender: TfrxComponent);
begin
  оборудование_тв:='';                      
  серийный_номер_тв_оборудования:='';   
  тариф_план_тв:='';
  //SetFilter('Листы заявления','');               
end;
procedure pRegCardIPTVOnManualBuild(Sender: TfrxComponent);
var str : string;                            
    i,n: Integer;
begin
   Engine.ShowBand(mdIPTV0);
   Engine.ShowBand(mdIPTV1);
   if (selected_garantsogl) and (selected_regcard) then begin
      i:=0;
      while i<Length(arSTBRC) do begin                                                               
        str:=arSTBRC[i];
        n:=Pos('`',str); оборудование_тв:=Copy(str,1,n-1); delete(str,1,n);                                                                                                                                              
        n:=Pos('`',str); серийный_номер_тв_оборудования:=Copy(str,1,n-1); delete(str,1,n);
        тариф_план_тв:=str;                        
        Engine.ShowBand(mdIPTV2);  
        i:=i+1;                        
      end;                
   end else oborudovanieSHPD1(sender.name); 
   if логин_пароль_tv<>'' then delete(логин_пароль_tv,1,3);
   Engine.ShowBand(mdIPTV3);
   Engine.ShowBand(mdIPTV4);
   Engine.ShowBand(mdIPTV5);
end;

//Активность флажков страниц пакетов в зависимости от главного флажка                                                                                                                                                                                                                                                     
procedure chbKanaliOnClick(Sender: TfrxComponent);
begin
  if chbInfKanali.checked then begin chbKDelov.Enabled:=true; chbKPubl.enabled:=true; chbKGost.enabled:=true; end else begin chbKDelov.Enabled:=false; chbKPubl.enabled:=false; chbKGost.enabled:=false; end;                                                                                                                                                                                                                                                                   
end;
  

  

  


begin
  pInitOperatorValues;        
  pInitAbonentValues;

  qZ:=Report.GetDataset('Заявления абонента');
  qOL:=Report.GetDataset('Листы заявления');
  qSAO:=Report.GetDataset('Справочник (Активное оборудование)');             
  qPU:=Report.GetDataset('Постоянные услуги абонента');
  qUD:=Report.GetDataset('Устройства по договору');                  
  qR:=Report.GetDataset('Рассрочка');                   
  qRGP:=Report.GetDataset('График платежей');        
end.